{
  "address": "0x354034e2B275f23aEC2EA4B7Ae23E1d96F4e18Cb",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "conversationHash",
          "type": "bytes32"
        }
      ],
      "name": "AgentConversation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldLevel",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLevel",
          "type": "uint256"
        }
      ],
      "name": "AgentEvolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "AuthorizedUsage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_newTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "Cloned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "dreamHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newIntelligenceLevel",
          "type": "uint256"
        }
      ],
      "name": "DreamProcessed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FeePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "_dataHashes",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_dataDescriptions",
          "type": "string[]"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "trait",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strength",
          "type": "uint256"
        }
      ],
      "name": "PersonalityEvolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes16[]",
          "name": "_sealedKeys",
          "type": "bytes16[]"
        }
      ],
      "name": "PublishedSealedKey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "Transferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "oldDataHashes",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "newDataHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "Updated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_AGENTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTING_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agents",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "agentName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "intelligenceLevel",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dreamCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "conversationCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "authorizeUsage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "authorizedUsersOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "name": "clone",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newAgentName",
          "type": "string"
        },
        {
          "internalType": "bytes[]",
          "name": "proofs",
          "type": "bytes[]"
        }
      ],
      "name": "clone",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "clonePublic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getAgentInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "agentName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "intelligenceLevel",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dreamCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "conversationCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "dataDescriptions",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemainingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalFeesCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "agentName",
          "type": "string"
        }
      ],
      "name": "isNameAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "proofs",
          "type": "bytes[]"
        },
        {
          "internalType": "string[]",
          "name": "descriptions",
          "type": "string[]"
        },
        {
          "internalType": "string",
          "name": "agentName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "nameExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "conversationHash",
          "type": "bytes32"
        }
      ],
      "name": "recordConversation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAgents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFeesCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "proofs",
          "type": "bytes[]"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferPublic",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "proofs",
          "type": "bytes[]"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IERC7857DataVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcd532a5124b9f6526a735394a265381e877ea237a4edb2319c3a7e4c89bc32df",
  "receipt": {
    "to": null,
    "from": "0x232CA04565A7aAffff9b715D88562E48715e9185",
    "contractAddress": "0x354034e2B275f23aEC2EA4B7Ae23E1d96F4e18Cb",
    "transactionIndex": 11,
    "gasUsed": "3165755",
    "logsBloom": "0x
    "blockHash": "0x1955ee8109833c7764dfb7868e617c6056b965139d762209d8141bddb8800b96",
    "transactionHash": "0xcd532a5124b9f6526a735394a265381e877ea237a4edb2319c3a7e4c89bc32df",
    "logs": [],
    "blockNumber": 3299855,
    "cumulativeGasUsed": "4057025",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7E40d1f83c07f89F338A71f002c7C4637C741B8b",
    "0x0f13e85B575964B8b4b77E37d43A6aE9E354e94C"
  ],
  "numDeployments": 2,
  "solcInputHash": "a08f1016a77a9b0afd5bbdcce4a0074b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"conversationHash\",\"type\":\"bytes32\"}],\"name\":\"AgentConversation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLevel\",\"type\":\"uint256\"}],\"name\":\"AgentEvolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AuthorizedUsage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"Cloned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"dreamHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newIntelligenceLevel\",\"type\":\"uint256\"}],\"name\":\"DreamProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"_dataHashes\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_dataDescriptions\",\"type\":\"string[]\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"trait\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strength\",\"type\":\"uint256\"}],\"name\":\"PersonalityEvolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes16[]\",\"name\":\"_sealedKeys\",\"type\":\"bytes16[]\"}],\"name\":\"PublishedSealedKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"oldDataHashes\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"newDataHashes\",\"type\":\"bytes32[]\"}],\"name\":\"Updated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_AGENTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"agentName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intelligenceLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dreamCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"conversationCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"authorizeUsage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"authorizedUsersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newAgentName\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"}],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clonePublic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAgentInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"agentName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"intelligenceLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dreamCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"conversationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"dataDescriptions\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalFeesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"agentName\",\"type\":\"string\"}],\"name\":\"isNameAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"},{\"internalType\":\"string[]\",\"name\":\"descriptions\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"agentName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nameExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conversationHash\",\"type\":\"bytes32\"}],\"name\":\"recordConversation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAgents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferPublic\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IERC7857DataVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enhanced version with agent naming, supply limit, and minting fee for testnet deployment\",\"events\":{\"AuthorizedUsage(uint256,address)\":{\"details\":\"This emits when a user is authorized to use the data\"},\"Cloned(uint256,uint256,address,address)\":{\"details\":\"This emits when data is cloned\"},\"Minted(uint256,address,address,bytes32[],string[])\":{\"details\":\"This emits when a new functional NFT is minted\"},\"PublishedSealedKey(address,uint256,bytes16[])\":{\"details\":\"This emits when a sealed key is published\"},\"Transferred(uint256,address,address)\":{\"details\":\"This emits when data is transferred with ownership\"}},\"kind\":\"dev\",\"methods\":{\"authorizeUsage(uint256,address)\":{\"params\":{\"tokenId\":\"Agent to authorize\",\"user\":\"User to authorize\"}},\"clone(address,uint256,string,bytes[])\":{\"params\":{\"newAgentName\":\"Name for the cloned agent\",\"proofs\":\"Clone proofs\",\"to\":\"Address to clone agent for\",\"tokenId\":\"Agent to clone\"},\"returns\":{\"newTokenId\":\"The cloned agent token ID\"}},\"mint(bytes[],string[],string,address)\":{\"params\":{\"agentName\":\"User-given name for the agent\",\"descriptions\":\"Data type descriptions\",\"proofs\":\"Ownership proofs for initial data\",\"to\":\"Address to mint agent for\"},\"returns\":{\"tokenId\":\"The newly minted agent token ID\"}},\"recordConversation(uint256,bytes32)\":{\"params\":{\"conversationHash\":\"Hash of conversation data stored in 0G\",\"tokenId\":\"Agent that had conversation\"}},\"transfer(address,uint256,bytes[])\":{\"params\":{\"proofs\":\"Transfer validity proofs\",\"to\":\"New owner address\",\"tokenId\":\"Agent to transfer\"}},\"update(uint256,bytes[])\":{\"params\":{\"proofs\":\"New data proofs\",\"tokenId\":\"Agent to update\"}}},\"stateVariables\":{\"verifier\":{\"return\":\"The address of the verifier contract\",\"returns\":{\"_0\":\"The address of the verifier contract\"}}},\"title\":\"DreamAgentNFT - Personalized AI Dream Analysis Agents\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeUsage(uint256,address)\":{\"notice\":\"Authorize user to use agent (but not own)\"},\"clone(address,uint256,string,bytes[])\":{\"notice\":\"Clone agent (create copy with same intelligence and personality)\"},\"getMintingFee()\":{\"notice\":\"Get minting fee in wei\"},\"getRemainingSupply()\":{\"notice\":\"Get remaining agent supply\"},\"getTotalFeesCollected()\":{\"notice\":\"Get total fees collected\"},\"getTreasury()\":{\"notice\":\"Get treasury address\"},\"isNameAvailable(string)\":{\"notice\":\"Check if agent name is available\"},\"mint(bytes[],string[],string,address)\":{\"notice\":\"Mint a new personalized dream agent for a user\"},\"recordConversation(uint256,bytes32)\":{\"notice\":\"Record a conversation with the agent (for personality development)\"},\"transfer(address,uint256,bytes[])\":{\"notice\":\"Transfer agent with intelligence to new owner\"},\"update(uint256,bytes[])\":{\"notice\":\"Update agent data with new dream information\"},\"verifier()\":{\"notice\":\"The verifier interface that this NFT uses\"}},\"notice\":\"Manages personalized dream agents with encrypted intelligence stored in 0G Storage\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DreamAgentNFT.sol\":\"DreamAgentNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DreamAgentNFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./interfaces/IERC7857.sol\\\";\\nimport \\\"./interfaces/IERC7857DataVerifier.sol\\\";\\n\\n/// @title DreamAgentNFT - Personalized AI Dream Analysis Agents\\n/// @notice Manages personalized dream agents with encrypted intelligence stored in 0G Storage\\n/// @dev Enhanced version with agent naming, supply limit, and minting fee for testnet deployment\\ncontract DreamAgentNFT is IERC7857 {\\n    \\n    // Data types for dream agents\\n    string constant DREAM_PATTERNS = \\\"dream_patterns\\\";\\n    string constant EMOTIONAL_PROFILE = \\\"emotional_profile\\\";\\n    string constant AGENT_INTELLIGENCE = \\\"agent_intelligence\\\";\\n    string constant PERSONALITY_DATA = \\\"personality_data\\\";\\n    \\n    // Maximum supply for testnet (cost control)\\n    uint256 public constant MAX_AGENTS = 1000;\\n    \\n    // Minting fee: 0.1 OG (0.1 * 10^18 wei)\\n    uint256 public constant MINTING_FEE = 0.1 ether;\\n    \\n    // Treasury address for collecting fees\\n    address public immutable treasury;\\n    \\n    struct DreamAgent {\\n        address owner;\\n        string agentName;           // NEW: User-given name for personalization\\n        uint256 createdAt;\\n        uint256 lastUpdated;\\n        string[] dataDescriptions;  // Types of data stored\\n        bytes32[] dataHashes;       // 0G Storage hashes\\n        address[] authorizedUsers;  // Authorized to use but not own\\n        uint256 intelligenceLevel;  // Agent's learning progress\\n        uint256 dreamCount;         // Number of dreams processed\\n        uint256 conversationCount;  // NEW: Number of chat interactions\\n    }\\n    \\n    // Contract state\\n    mapping(uint256 => DreamAgent) public agents;\\n    mapping(string => bool) public nameExists;  // NEW: Prevent duplicate names\\n    uint256 public nextTokenId = 1;\\n    uint256 public totalAgents = 0;\\n    uint256 public totalFeesCollected = 0;      // Track total fees collected\\n    \\n    // Contract metadata\\n    string public name = \\\"Dreamscape AI Agents\\\";\\n    string public symbol = \\\"DREAM\\\";\\n    \\n    // Verifier for proof validation\\n    IERC7857DataVerifier public immutable verifier;\\n    \\n    // Events\\n    event Updated(uint256 indexed tokenId, bytes32[] oldDataHashes, bytes32[] newDataHashes);\\n    event DreamProcessed(uint256 indexed tokenId, bytes32 dreamHash, uint256 newIntelligenceLevel);\\n    event AgentEvolved(uint256 indexed tokenId, uint256 oldLevel, uint256 newLevel);\\n    event AgentConversation(uint256 indexed tokenId, bytes32 conversationHash); // NEW: Chat tracking\\n    event PersonalityEvolved(uint256 indexed tokenId, string trait, uint256 strength); // NEW: Personality tracking\\n    event FeePaid(uint256 indexed tokenId, address indexed payer, uint256 amount); // NEW: Fee tracking\\n    \\n    constructor(address _verifier, address _treasury) {\\n        require(_verifier != address(0), \\\"Verifier cannot be zero address\\\");\\n        require(_treasury != address(0), \\\"Treasury cannot be zero address\\\");\\n        verifier = IERC7857DataVerifier(_verifier);\\n        treasury = _treasury;\\n    }\\n    \\n    /// @notice Mint a new personalized dream agent for a user\\n    /// @param proofs Ownership proofs for initial data\\n    /// @param descriptions Data type descriptions\\n    /// @param agentName User-given name for the agent\\n    /// @param to Address to mint agent for\\n    /// @return tokenId The newly minted agent token ID\\n    function mint(\\n        bytes[] calldata proofs,\\n        string[] calldata descriptions,\\n        string memory agentName,\\n        address to\\n    ) external payable returns (uint256 tokenId) {\\n        require(to != address(0), \\\"Cannot mint to zero address\\\");\\n        require(descriptions.length == proofs.length, \\\"Descriptions and proofs length mismatch\\\");\\n        require(totalAgents < MAX_AGENTS, \\\"Maximum agents limit reached\\\");\\n        require(bytes(agentName).length > 0 && bytes(agentName).length <= 32, \\\"Invalid agent name\\\");\\n        require(!nameExists[agentName], \\\"Agent name already exists\\\");\\n        require(msg.value >= MINTING_FEE, \\\"Insufficient payment for minting\\\");\\n        \\n        // Verify proofs\\n        PreimageProofOutput[] memory proofOutputs = verifier.verifyPreimage(proofs);\\n        bytes32[] memory dataHashes = new bytes32[](proofOutputs.length);\\n        \\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\n            require(proofOutputs[i].isValid, \\\"Invalid proof\\\");\\n            dataHashes[i] = proofOutputs[i].dataHash;\\n        }\\n        \\n        // Reserve the name\\n        nameExists[agentName] = true;\\n        \\n        // Create new personalized agent\\n        tokenId = nextTokenId++;\\n        agents[tokenId] = DreamAgent({\\n            owner: to,\\n            agentName: agentName,\\n            createdAt: block.timestamp,\\n            lastUpdated: block.timestamp,\\n            dataDescriptions: descriptions,\\n            dataHashes: dataHashes,\\n            authorizedUsers: new address[](0),\\n            intelligenceLevel: 1,\\n            dreamCount: 0,\\n            conversationCount: 0\\n        });\\n        \\n        totalAgents++;\\n        totalFeesCollected += MINTING_FEE;\\n        \\n        // Transfer minting fee to treasury\\n        (bool success, ) = treasury.call{value: MINTING_FEE}(\\\"\\\");\\n        require(success, \\\"Treasury payment failed\\\");\\n        \\n        // Refund excess payment\\n        if (msg.value > MINTING_FEE) {\\n            (bool refundSuccess, ) = msg.sender.call{value: msg.value - MINTING_FEE}(\\\"\\\");\\n            require(refundSuccess, \\\"Refund failed\\\");\\n        }\\n        \\n        emit Minted(tokenId, msg.sender, to, dataHashes, descriptions);\\n        emit FeePaid(tokenId, msg.sender, MINTING_FEE);\\n        \\n        return tokenId;\\n    }\\n    \\n    /// @notice Update agent data with new dream information\\n    /// @param tokenId Agent to update\\n    /// @param proofs New data proofs\\n    function update(uint256 tokenId, bytes[] calldata proofs) external {\\n        require(agents[tokenId].owner == msg.sender, \\\"Not agent owner\\\");\\n        require(proofs.length == agents[tokenId].dataHashes.length, \\\"Proof count mismatch\\\");\\n        \\n        // Verify proofs\\n        PreimageProofOutput[] memory proofOutputs = verifier.verifyPreimage(proofs);\\n        bytes32[] memory oldDataHashes = agents[tokenId].dataHashes;\\n        bytes32[] memory newDataHashes = new bytes32[](proofOutputs.length);\\n        \\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\n            require(proofOutputs[i].isValid, \\\"Invalid proof\\\");\\n            newDataHashes[i] = proofOutputs[i].dataHash;\\n        }\\n        \\n        // Update agent\\n        agents[tokenId].dataHashes = newDataHashes;\\n        agents[tokenId].lastUpdated = block.timestamp;\\n        agents[tokenId].dreamCount++;\\n        \\n        // Enhanced evolution logic: increase intelligence every 3 dreams (faster evolution)\\n        if (agents[tokenId].dreamCount % 3 == 0) {\\n            uint256 oldLevel = agents[tokenId].intelligenceLevel;\\n            agents[tokenId].intelligenceLevel++;\\n            emit AgentEvolved(tokenId, oldLevel, agents[tokenId].intelligenceLevel);\\n            \\n            // Emit personality evolution based on intelligence milestones\\n            if (agents[tokenId].intelligenceLevel == 5) {\\n                emit PersonalityEvolved(tokenId, \\\"analytical\\\", 75);\\n            } else if (agents[tokenId].intelligenceLevel == 10) {\\n                emit PersonalityEvolved(tokenId, \\\"empathetic\\\", 90);\\n            }\\n        }\\n        \\n        emit Updated(tokenId, oldDataHashes, newDataHashes);\\n        emit DreamProcessed(tokenId, newDataHashes[0], agents[tokenId].intelligenceLevel);\\n    }\\n    \\n    /// @notice Record a conversation with the agent (for personality development)\\n    /// @param tokenId Agent that had conversation\\n    /// @param conversationHash Hash of conversation data stored in 0G\\n    function recordConversation(uint256 tokenId, bytes32 conversationHash) external {\\n        require(agents[tokenId].owner == msg.sender, \\\"Not agent owner\\\");\\n        \\n        agents[tokenId].conversationCount++;\\n        agents[tokenId].lastUpdated = block.timestamp;\\n        \\n        // Slight intelligence boost from conversations (1 point every 10 conversations)\\n        if (agents[tokenId].conversationCount % 10 == 0) {\\n            uint256 oldLevel = agents[tokenId].intelligenceLevel;\\n            agents[tokenId].intelligenceLevel++;\\n            emit AgentEvolved(tokenId, oldLevel, agents[tokenId].intelligenceLevel);\\n        }\\n        \\n        emit AgentConversation(tokenId, conversationHash);\\n    }\\n    \\n    /// @notice Transfer agent with intelligence to new owner\\n    /// @param to New owner address\\n    /// @param tokenId Agent to transfer\\n    /// @param proofs Transfer validity proofs\\n    function transfer(\\n        address to,\\n        uint256 tokenId,\\n        bytes[] calldata proofs\\n    ) external override {\\n        require(to != address(0), \\\"Cannot transfer to zero address\\\");\\n        require(agents[tokenId].owner == msg.sender, \\\"Not agent owner\\\");\\n        \\n        // Verify transfer proofs\\n        TransferValidityProofOutput[] memory proofOutputs = verifier.verifyTransferValidity(proofs);\\n        \\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\n            require(proofOutputs[i].isValid, \\\"Invalid transfer proof\\\");\\n            require(proofOutputs[i].oldDataHash == agents[tokenId].dataHashes[i], \\\"Data hash mismatch\\\");\\n        }\\n        \\n        // Update agent data hashes for new owner\\n        bytes32[] memory newDataHashes = new bytes32[](proofOutputs.length);\\n        bytes16[] memory sealedKeys = new bytes16[](proofOutputs.length);\\n        \\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\n            newDataHashes[i] = proofOutputs[i].newDataHash;\\n            sealedKeys[i] = proofOutputs[i].sealedKey;\\n        }\\n        \\n        // Transfer ownership\\n        address from = agents[tokenId].owner;\\n        agents[tokenId].owner = to;\\n        agents[tokenId].dataHashes = newDataHashes;\\n        agents[tokenId].lastUpdated = block.timestamp;\\n        \\n        emit Transferred(tokenId, from, to);\\n        emit PublishedSealedKey(to, tokenId, sealedKeys);\\n    }\\n    \\n    /// @notice Clone agent (create copy with same intelligence and personality)\\n    /// @param to Address to clone agent for\\n    /// @param tokenId Agent to clone\\n    /// @param newAgentName Name for the cloned agent\\n    /// @param proofs Clone proofs\\n    /// @return newTokenId The cloned agent token ID\\n    function clone(\\n        address to,\\n        uint256 tokenId,\\n        string memory newAgentName,\\n        bytes[] calldata proofs\\n    ) external payable returns (uint256 newTokenId) {\\n        require(to != address(0), \\\"Cannot clone to zero address\\\");\\n        require(agents[tokenId].owner == msg.sender, \\\"Not agent owner\\\");\\n        require(totalAgents < MAX_AGENTS, \\\"Maximum agents limit reached\\\");\\n        require(bytes(newAgentName).length > 0 && bytes(newAgentName).length <= 32, \\\"Invalid agent name\\\");\\n        require(!nameExists[newAgentName], \\\"Agent name already exists\\\");\\n        require(msg.value >= MINTING_FEE, \\\"Insufficient payment for cloning\\\");\\n        \\n        // Verify clone proofs (same as transfer proofs)\\n        TransferValidityProofOutput[] memory proofOutputs = verifier.verifyTransferValidity(proofs);\\n        \\n        bytes32[] memory newDataHashes = new bytes32[](proofOutputs.length);\\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\n            require(proofOutputs[i].isValid, \\\"Invalid clone proof\\\");\\n            newDataHashes[i] = proofOutputs[i].newDataHash;\\n        }\\n        \\n        // Reserve the new name\\n        nameExists[newAgentName] = true;\\n        \\n        // Create cloned agent with new name\\n        newTokenId = nextTokenId++;\\n        agents[newTokenId] = DreamAgent({\\n            owner: to,\\n            agentName: newAgentName,\\n            createdAt: block.timestamp,\\n            lastUpdated: block.timestamp,\\n            dataDescriptions: agents[tokenId].dataDescriptions,\\n            dataHashes: newDataHashes,\\n            authorizedUsers: new address[](0),\\n            intelligenceLevel: agents[tokenId].intelligenceLevel, // Same intelligence!\\n            dreamCount: 0, // Reset dream count for new owner\\n            conversationCount: 0 // Reset conversation count\\n        });\\n        \\n        totalAgents++;\\n        totalFeesCollected += MINTING_FEE;\\n        \\n        // Transfer cloning fee to treasury\\n        (bool success, ) = treasury.call{value: MINTING_FEE}(\\\"\\\");\\n        require(success, \\\"Treasury payment failed\\\");\\n        \\n        // Refund excess payment\\n        if (msg.value > MINTING_FEE) {\\n            (bool refundSuccess, ) = msg.sender.call{value: msg.value - MINTING_FEE}(\\\"\\\");\\n            require(refundSuccess, \\\"Refund failed\\\");\\n        }\\n        \\n        emit Cloned(tokenId, newTokenId, msg.sender, to);\\n        emit Minted(newTokenId, msg.sender, to, newDataHashes, agents[tokenId].dataDescriptions);\\n        emit FeePaid(newTokenId, msg.sender, MINTING_FEE);\\n        \\n        return newTokenId;\\n    }\\n    \\n    /// @notice Authorize user to use agent (but not own)\\n    /// @param tokenId Agent to authorize\\n    /// @param user User to authorize\\n    function authorizeUsage(uint256 tokenId, address user) external override {\\n        require(agents[tokenId].owner == msg.sender, \\\"Not agent owner\\\");\\n        require(user != address(0), \\\"Cannot authorize zero address\\\");\\n        \\n        agents[tokenId].authorizedUsers.push(user);\\n        \\n        emit AuthorizedUsage(tokenId, user);\\n    }\\n    \\n    // View functions\\n    function ownerOf(uint256 tokenId) external view override returns (address) {\\n        return agents[tokenId].owner;\\n    }\\n    \\n    function authorizedUsersOf(uint256 tokenId) external view override returns (address[] memory) {\\n        return agents[tokenId].authorizedUsers;\\n    }\\n    \\n    function getAgentInfo(uint256 tokenId) external view returns (\\n        address owner,\\n        string memory agentName,\\n        uint256 intelligenceLevel,\\n        uint256 dreamCount,\\n        uint256 conversationCount,\\n        uint256 lastUpdated,\\n        string[] memory dataDescriptions\\n    ) {\\n        DreamAgent memory agent = agents[tokenId];\\n        return (\\n            agent.owner,\\n            agent.agentName,\\n            agent.intelligenceLevel,\\n            agent.dreamCount,\\n            agent.conversationCount,\\n            agent.lastUpdated,\\n            agent.dataDescriptions\\n        );\\n    }\\n    \\n    /// @notice Get remaining agent supply\\n    function getRemainingSupply() external view returns (uint256) {\\n        return MAX_AGENTS - totalAgents;\\n    }\\n    \\n    /// @notice Check if agent name is available\\n    function isNameAvailable(string memory agentName) external view returns (bool) {\\n        return !nameExists[agentName];\\n    }\\n    \\n    /// @notice Get minting fee in wei\\n    function getMintingFee() external pure returns (uint256) {\\n        return MINTING_FEE;\\n    }\\n    \\n    /// @notice Get treasury address\\n    function getTreasury() external view returns (address) {\\n        return treasury;\\n    }\\n    \\n    /// @notice Get total fees collected\\n    function getTotalFeesCollected() external view returns (uint256) {\\n        return totalFeesCollected;\\n    }\\n    \\n    // Not implemented for testing (would require complex logic)\\n    function transferPublic(address, uint256) external pure override {\\n        revert(\\\"Public transfer not implemented\\\");\\n    }\\n    \\n    function clonePublic(address, uint256) external payable override returns (uint256) {\\n        revert(\\\"Public clone not implemented\\\");\\n    }\\n    \\n    // Legacy mint function for compatibility\\n    function mint(\\n        bytes[] calldata /* proofs */,\\n        string[] calldata /* descriptions */,\\n        address /* to */\\n    ) external payable returns (uint256) {\\n        revert(\\\"Use mint with agentName parameter\\\");\\n    }\\n    \\n    // Legacy clone function for compatibility  \\n    function clone(\\n        address /* to */,\\n        uint256 /* tokenId */,\\n        bytes[] calldata /* proofs */\\n    ) external payable returns (uint256) {\\n        revert(\\\"Use clone with newAgentName parameter\\\");\\n    }\\n} \",\"keccak256\":\"0xaf5a69187b1c185dcca798da50f454f74079fd2c37e2031ee69abe2bb8aff5d3\",\"license\":\"MIT\"},\"contracts/interfaces/IERC7857.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nimport \\\"./IERC7857DataVerifier.sol\\\";\\n\\ninterface IERC7857 {\\n    /// @dev This emits when a new functional NFT is minted\\n    event Minted(\\n        uint256 indexed _tokenId,\\n        address indexed _creator,\\n        address indexed _owner,\\n        bytes32[] _dataHashes,\\n        string[] _dataDescriptions\\n    );\\n\\n    /// @dev This emits when a user is authorized to use the data\\n    event AuthorizedUsage(uint256 indexed _tokenId, address indexed _user);\\n\\n    /// @dev This emits when data is transferred with ownership\\n    event Transferred(\\n        uint256 _tokenId,\\n        address indexed _from,\\n        address indexed _to\\n    );\\n\\n    /// @dev This emits when data is cloned\\n    event Cloned(\\n        uint256 indexed _tokenId,\\n        uint256 indexed _newTokenId,\\n        address _from,\\n        address _to\\n    );\\n\\n    /// @dev This emits when a sealed key is published\\n    event PublishedSealedKey(\\n        address indexed _to,\\n        uint256 indexed _tokenId,\\n        bytes16[] _sealedKeys\\n    );\\n\\n    /// @notice The verifier interface that this NFT uses\\n    /// @return The address of the verifier contract\\n    function verifier() external view returns (IERC7857DataVerifier);\\n\\n    /// @notice Mint new functional NFT with functional data ownership proof\\n    /// @param _proofs Proof of data ownership\\n    /// @param _dataDescriptions Descriptions of the data\\n    /// @return _tokenId The ID of the newly minted token\\n    /// @param _to The address to mint the token for, if _to is not set, the token will be minted for the caller\\n    function mint(\\n        bytes[] calldata _proofs,\\n        string[] calldata _dataDescriptions,\\n        address _to\\n    ) external payable returns (uint256 _tokenId);\\n\\n    /// @notice Transfer data with ownership\\n    /// @param _to Address to transfer data to\\n    /// @param _tokenId The token to transfer data for\\n    /// @param _proofs Proofs of data available for _to\\n    function transfer(\\n        address _to,\\n        uint256 _tokenId,\\n        bytes[] calldata _proofs\\n    ) external;\\n\\n    /// @notice Clone data\\n    /// @param _to Address to clone data to\\n    /// @param _tokenId The token to clone data for\\n    /// @param _proofs Proofs of data available for _to\\n    /// @return _newTokenId The ID of the newly cloned token\\n    function clone(\\n        address _to,\\n        uint256 _tokenId,\\n        bytes[] calldata _proofs\\n    ) external payable returns (uint256 _newTokenId);\\n\\n    /// @notice Transfer public data with ownership\\n    /// @param _to Address to transfer data to\\n    /// @param _tokenId The token to transfer data for\\n    function transferPublic(address _to, uint256 _tokenId) external;\\n\\n    /// @notice Clone public data\\n    /// @param _to Address to clone data to\\n    /// @param _tokenId The token to clone data for\\n    /// @return _newTokenId The ID of the newly cloned token\\n    function clonePublic(\\n        address _to,\\n        uint256 _tokenId\\n    ) external payable returns (uint256 _newTokenId);\\n\\n    /// @notice Add authorized user to group\\n    /// @param _tokenId The token to add to group\\n    function authorizeUsage(uint256 _tokenId, address _user) external;\\n\\n    /// @notice Get token owner\\n    /// @param _tokenId The token identifier\\n    /// @return The current owner of the token\\n    function ownerOf(uint256 _tokenId) external view returns (address);\\n\\n    /// @notice Get the authorized users of a token\\n    /// @param _tokenId The token identifier\\n    /// @return The current authorized users of the token\\n    function authorizedUsersOf(\\n        uint256 _tokenId\\n    ) external view returns (address[] memory);\\n} \",\"keccak256\":\"0xc25994f72e646e15966c0da0e269a3beb79da86ce66452a733dff8ef054d0b32\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IERC7857DataVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nstruct PreimageProofOutput {\\n    bytes32 dataHash;\\n    bool isValid;\\n}\\n\\nstruct TransferValidityProofOutput {\\n    bytes32 oldDataHash;\\n    bytes32 newDataHash;\\n    bytes pubKey;\\n    bytes16 sealedKey;\\n    bool isValid;\\n}\\n\\ninterface IERC7857DataVerifier {\\n    /// @notice Verify preimage of data\\n    /// @param proofs Proof of data ownership\\n    /// @return Output of the preimage proof verification\\n    function verifyPreimage(\\n        bytes[] calldata proofs\\n    ) external view returns (PreimageProofOutput[] memory);\\n\\n    /// @notice Verify data transfer validity\\n    /// @param proofs Proof of data transfer validity\\n    /// @return Output of the transfer validity proof verification\\n    function verifyTransferValidity(\\n        bytes[] calldata proofs\\n    ) external view returns (TransferValidityProofOutput[] memory);\\n} \",\"keccak256\":\"0x78406bba1f9f687ee4e9fce1ce7391a3c9f94029c2e1a09f376e45f41cb3cf58\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x600160025560006003819055600455610100604052601460c09081527f447265616d7363617065204149204167656e747300000000000000000000000060e0526005906200004e90826200021c565b50604080518082019091526005815264445245414d60d81b60208201526006906200007a90826200021c565b503480156200008857600080fd5b5060405162003a5f38038062003a5f833981016040819052620000ab9162000305565b6001600160a01b038216620001075760405162461bcd60e51b815260206004820152601f60248201527f56657269666965722063616e6e6f74206265207a65726f20616464726573730060448201526064015b60405180910390fd5b6001600160a01b0381166200015f5760405162461bcd60e51b815260206004820152601f60248201527f54726561737572792063616e6e6f74206265207a65726f2061646472657373006044820152606401620000fe565b6001600160a01b0391821660a052166080526200033d565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b0381111562000238576200023862000177565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146200030057600080fd5b919050565b600080604083850312156200031957600080fd5b6200032483620002e8565b91506200033460208401620002e8565b90509250929050565b60805160a0516136cb620003946000396000818161026401528181610a73015281816111ce01528181611b7301526122870152600081816102ef0152818161038d015281816115040152611f9301526136cb6000f3fe6080604052600436106101c25760003560e01c806375794a3c116100f7578063b59d88a911610095578063d847483611610064578063d84748361461054a578063dfdad7de1461055d578063e4b7fb731461057d578063fa83d14e1461059257600080fd5b8063b59d88a9146104c2578063c5053712146104dd578063cc637afe146104f3578063d642b4b11461052e57600080fd5b806398a9ce2e116100d157806398a9ce2e14610466578063a501445214610479578063ab30be871461048c578063b1128018146104a257600080fd5b806375794a3c1461040b5780638cf44d211461042157806395d89b411461045157600080fd5b8063468765081161016457806361d027b31161013e57806361d027b31461037b5780636352211e146103af578063662ae768146103e55780637289fdd6146103f857600080fd5b80634687650814610313578063513856c81461033257806360c6d8ae1461036557600080fd5b80632b7ac3f3116101a05780632b7ac3f3146102525780633481e7bf1461029e578063389f8754146102c05780633b19e84a146102e057600080fd5b806306fdde03146101c757806319a6a6e9146101f25780631aeb542f14610225575b600080fd5b3480156101d357600080fd5b506101dc6105b2565b6040516101e991906128ec565b60405180910390f35b3480156101fe57600080fd5b5061021261020d366004612906565b610640565b6040516101e9979695949392919061291f565b34801561023157600080fd5b50610245610240366004612906565b610912565b6040516101e991906129bf565b34801561025e57600080fd5b506102867f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101e9565b3480156102aa57600080fd5b506102be6102b9366004612a28565b61097f565b005b3480156102cc57600080fd5b506102be6102db366004612a9d565b6109cc565b3480156102ec57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610286565b34801561031f57600080fd5b506004545b6040519081526020016101e9565b34801561033e57600080fd5b5061035261034d366004612906565b610ec5565b6040516101e99796959493929190612ae8565b34801561037157600080fd5b5061032460045481565b34801561038757600080fd5b506102867f000000000000000000000000000000000000000000000000000000000000000081565b3480156103bb57600080fd5b506102866103ca366004612906565b6000908152602081905260409020546001600160a01b031690565b6103246103f3366004612c43565b610f92565b610324610406366004612ce5565b6116fc565b34801561041757600080fd5b5061032460025481565b34801561042d57600080fd5b5061044161043c366004612d3e565b611755565b60405190151581526020016101e9565b34801561045d57600080fd5b506101dc611781565b610324610474366004612a28565b61178e565b610324610487366004612d7a565b6117d9565b34801561049857600080fd5b506103246103e881565b3480156104ae57600080fd5b506102be6104bd366004612dfa565b61182e565b3480156104ce57600080fd5b5067016345785d8a0000610324565b3480156104e957600080fd5b5061032460035481565b3480156104ff57600080fd5b5061044161050e366004612d3e565b805160208183018101805160018252928201919093012091525460ff1681565b34801561053a57600080fd5b5061032467016345785d8a000081565b610324610558366004612e1c565b611960565b34801561056957600080fd5b506102be610578366004612ce5565b6121e1565b34801561058957600080fd5b5061032461262b565b34801561059e57600080fd5b506102be6105ad366004612ea0565b612642565b600580546105bf90612ecc565b80601f01602080910402602001604051908101604052809291908181526020018280546105eb90612ecc565b80156106385780601f1061060d57610100808354040283529160200191610638565b820191906000526020600020905b81548152906001019060200180831161061b57829003601f168201915b505050505081565b6000818152602081815260408083208151610140810190925280546001600160a01b0316825260018101805460609486948594859485948994869493929084019161068a90612ecc565b80601f01602080910402602001604051908101604052809291908181526020018280546106b690612ecc565b80156107035780601f106106d857610100808354040283529160200191610703565b820191906000526020600020905b8154815290600101906020018083116106e657829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107f157838290600052602060002001805461076490612ecc565b80601f016020809104026020016040519081016040528092919081815260200182805461079090612ecc565b80156107dd5780601f106107b2576101008083540402835291602001916107dd565b820191906000526020600020905b8154815290600101906020018083116107c057829003601f168201915b505050505081526020019060010190610745565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561084857602002820191906000526020600020905b815481526020019060010190808311610834575b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156108aa57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161088c575b5050505050815260200160078201548152602001600882015481526020016009820154815250509050806000015181602001518260e0015183610100015184610120015185606001518660800151975097509750975097509750975050919395979092949650565b6000818152602081815260409182902060060180548351818402810184019094528084526060939283018282801561097357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610955575b50505050509050919050565b60405162461bcd60e51b815260206004820152601f60248201527f5075626c6963207472616e73666572206e6f7420696d706c656d656e7465640060448201526064015b60405180910390fd5b6000838152602081905260409020546001600160a01b03163314610a025760405162461bcd60e51b81526004016109c390612f06565b6000838152602081905260409020600501548114610a595760405162461bcd60e51b81526020600482015260146024820152730a0e4dedecc40c6deeadce840dad2e6dac2e8c6d60631b60448201526064016109c3565b60405163c2a93e3760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2a93e3790610aaa9086908690600401612f9d565b600060405180830381865afa158015610ac7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aef9190810190613036565b60008581526020818152604080832060050180548251818502810185019093528083529495509293909291830182828015610b4957602002820191906000526020600020905b815481526020019060010190808311610b35575b50505050509050600082516001600160401b03811115610b6b57610b6b612b36565b604051908082528060200260200182016040528015610b94578160200160208202803683370190505b50905060005b8351811015610c4a57838181518110610bb557610bb56130f3565b602002602001015160200151610bfd5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016109c3565b838181518110610c0f57610c0f6130f3565b602002602001015160000151828281518110610c2d57610c2d6130f3565b602090810291909101015280610c428161311f565b915050610b9a565b506000868152602081815260409091208251610c6e9260059092019184019061273b565b506000868152602081905260408120426003820155600801805491610c928361311f565b9091555050600086815260208190526040902060080154610cb590600390613138565b600003610e11576000868152602081905260408120600701805491829190610cdc8361311f565b9091555050600087815260208181526040918290206007015482518481529182015288917f06bbb7cb56b5f3845ce5ad015d25cbf87ed1c37c635e2082acb2610598f15cc7910160405180910390a2600087815260208190526040902060070154600503610d9f5760408051818152600a8183015269185b985b1e5d1a58d85b60b21b6060820152604b6020820152905188917f7917f24714b510f49ad86661d285716ae768e3e3fcc0df42f768b3134d57a7e9919081900360800190a2610e0f565b600087815260208190526040902060070154600a03610e0f5760408051818152600a8183015269656d706174686574696360b01b6060820152605a6020820152905188917f7917f24714b510f49ad86661d285716ae768e3e3fcc0df42f768b3134d57a7e9919081900360800190a25b505b857f51fa73895ca2bd4c7f525775384b199b6047f069e662b82aa9e1b0998b9c29758383604051610e43929190613195565b60405180910390a2857f871f9739b79e9efd6285318758001f00502185ff0d254a080922cd80580c3e0282600081518110610e8057610e806130f3565b60200260200101516000808a815260200190815260200160002060070154604051610eb5929190918252602082015260400190565b60405180910390a2505050505050565b600060208190529081526040902080546001820180546001600160a01b039092169291610ef190612ecc565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1d90612ecc565b8015610f6a5780601f10610f3f57610100808354040283529160200191610f6a565b820191906000526020600020905b815481529060010190602001808311610f4d57829003601f168201915b5050505050908060020154908060030154908060070154908060080154908060090154905087565b60006001600160a01b038216610fea5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f2061646472657373000000000060448201526064016109c3565b8386146110495760405162461bcd60e51b815260206004820152602760248201527f4465736372697074696f6e7320616e642070726f6f6673206c656e677468206d6044820152660d2e6dac2e8c6d60cb1b60648201526084016109c3565b6103e86003541061109c5760405162461bcd60e51b815260206004820152601c60248201527f4d6178696d756d206167656e7473206c696d697420726561636865640000000060448201526064016109c3565b600083511180156110af57506020835111155b6110f05760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206167656e74206e616d6560701b60448201526064016109c3565b60018360405161110091906131c3565b9081526040519081900360200190205460ff161561115c5760405162461bcd60e51b81526020600482015260196024820152784167656e74206e616d6520616c72656164792065786973747360381b60448201526064016109c3565b67016345785d8a00003410156111b45760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74207061796d656e7420666f72206d696e74696e6760448201526064016109c3565b60405163c2a93e3760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2a93e3790611205908b908b90600401612f9d565b600060405180830381865afa158015611222573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261124a9190810190613036565b9050600081516001600160401b0381111561126757611267612b36565b604051908082528060200260200182016040528015611290578160200160208202803683370190505b50905060005b8251811015611346578281815181106112b1576112b16130f3565b6020026020010151602001516112f95760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016109c3565b82818151811061130b5761130b6130f3565b602002602001015160000151828281518110611329576113296130f3565b60209081029190910101528061133e8161311f565b915050611296565b506001808660405161135891906131c3565b908152604051908190036020019020805491151560ff19909216919091179055600280549060006113888361311f565b919050559250604051806101400160405280856001600160a01b031681526020018681526020014281526020014281526020018888906113c891906131df565b815260208082018490526040805160008082528184018352828501919091526001606085018190526080850182905260a090940181905287815280835220835181546001600160a01b0319166001600160a01b0390911617815590830151909182019061143590826132a1565b50604082015160028201556060820151600382015560808201518051611465916004840191602090910190612786565b5060a0820151805161148191600584019160209091019061273b565b5060c0820151805161149d9160068401916020909101906127d8565b5060e08201516007820155610100820151600882015561012090910151600990910155600380549060006114d08361311f565b919050555067016345785d8a0000600460008282546114ef9190613360565b90915550506040516000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169067016345785d8a0000908381818185875af1925050503d8060008114611567576040519150601f19603f3d011682016040523d82523d6000602084013e61156c565b606091505b50509050806115b75760405162461bcd60e51b8152602060048201526017602482015276151c99585cdd5c9e481c185e5b595b9d0819985a5b1959604a1b60448201526064016109c3565b67016345785d8a0000341115611660576000336115dc67016345785d8a000034613379565b604051600081818185875af1925050503d8060008114611618576040519150601f19603f3d011682016040523d82523d6000602084013e61161d565b606091505b505090508061165e5760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b60448201526064016109c3565b505b846001600160a01b0316336001600160a01b0316857f531bd8ca2b17505aaa50d843fabe2dfd9a3bb9e20c511d2288b24bd484861b02858c8c6040516116a89392919061338c565b60405180910390a460405167016345785d8a00008152339085907f6fe296e805108cd514fea415210be4016149b01eeb08effbe130951b6a5f6c0b9060200160405180910390a35050509695505050505050565b60405162461bcd60e51b815260206004820152602560248201527f55736520636c6f6e652077697468206e65774167656e744e616d65207061726160448201526436b2ba32b960d91b60648201526000906084016109c3565b600060018260405161176791906131c3565b9081526040519081900360200190205460ff161592915050565b600680546105bf90612ecc565b60405162461bcd60e51b815260206004820152601c60248201527f5075626c696320636c6f6e65206e6f7420696d706c656d656e7465640000000060448201526000906064016109c3565b60405162461bcd60e51b815260206004820152602160248201527f557365206d696e742077697468206167656e744e616d6520706172616d6574656044820152603960f91b60648201526000906084016109c3565b6000828152602081905260409020546001600160a01b031633146118645760405162461bcd60e51b81526004016109c390612f06565b60008281526020819052604081206009018054916118818361311f565b90915550506000828152602081905260409020426003820155600901546118aa90600a90613138565b6000036119225760008281526020819052604081206007018054918291906118d18361311f565b9091555050600083815260208181526040918290206007015482518481529182015284917f06bbb7cb56b5f3845ce5ad015d25cbf87ed1c37c635e2082acb2610598f15cc7910160405180910390a2505b817f0a8164b6bc90562f210a3f5fc6182ee67125e8148743a34f0bdca046396380b88260405161195491815260200190565b60405180910390a25050565b60006001600160a01b0386166119b85760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f7420636c6f6e6520746f207a65726f20616464726573730000000060448201526064016109c3565b6000858152602081905260409020546001600160a01b031633146119ee5760405162461bcd60e51b81526004016109c390612f06565b6103e860035410611a415760405162461bcd60e51b815260206004820152601c60248201527f4d6178696d756d206167656e7473206c696d697420726561636865640000000060448201526064016109c3565b60008451118015611a5457506020845111155b611a955760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206167656e74206e616d6560701b60448201526064016109c3565b600184604051611aa591906131c3565b9081526040519081900360200190205460ff1615611b015760405162461bcd60e51b81526020600482015260196024820152784167656e74206e616d6520616c72656164792065786973747360381b60448201526064016109c3565b67016345785d8a0000341015611b595760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74207061796d656e7420666f7220636c6f6e696e6760448201526064016109c3565b6040516349e176d360e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393c2eda690611baa9087908790600401612f9d565b600060405180830381865afa158015611bc7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bef919081019061341e565b9050600081516001600160401b03811115611c0c57611c0c612b36565b604051908082528060200260200182016040528015611c35578160200160208202803683370190505b50905060005b8251811015611cf157828181518110611c5657611c566130f3565b602002602001015160800151611ca45760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21031b637b73290383937b7b360691b60448201526064016109c3565b828181518110611cb657611cb66130f3565b602002602001015160200151828281518110611cd457611cd46130f3565b602090810291909101015280611ce98161311f565b915050611c3b565b5060018087604051611d0391906131c3565b908152604051908190036020019020805491151560ff1990921691909117905560028054906000611d338361311f565b919050559250604051806101400160405280896001600160a01b031681526020018781526020014281526020014281526020016000808a8152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b82821015611e47578382906000526020600020018054611dba90612ecc565b80601f0160208091040260200160405190810160405280929190818152602001828054611de690612ecc565b8015611e335780601f10611e0857610100808354040283529160200191611e33565b820191906000526020600020905b815481529060010190602001808311611e1657829003601f168201915b505050505081526020019060010190611d9b565b5050509082525060208082018490526040805160008082528184018352828501919091528b81528083528181206007015460608501526080840181905260a0909301839052868352828252909120825181546001600160a01b0319166001600160a01b03909116178155908201516001820190611ec490826132a1565b50604082015160028201556060820151600382015560808201518051611ef4916004840191602090910190612786565b5060a08201518051611f1091600584019160209091019061273b565b5060c08201518051611f2c9160068401916020909101906127d8565b5060e0820151600782015561010082015160088201556101209091015160099091015560038054906000611f5f8361311f565b919050555067016345785d8a000060046000828254611f7e9190613360565b90915550506040516000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169067016345785d8a0000908381818185875af1925050503d8060008114611ff6576040519150601f19603f3d011682016040523d82523d6000602084013e611ffb565b606091505b50509050806120465760405162461bcd60e51b8152602060048201526017602482015276151c99585cdd5c9e481c185e5b595b9d0819985a5b1959604a1b60448201526064016109c3565b67016345785d8a00003411156120ef5760003361206b67016345785d8a000034613379565b604051600081818185875af1925050503d80600081146120a7576040519150601f19603f3d011682016040523d82523d6000602084013e6120ac565b606091505b50509050806120ed5760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b60448201526064016109c3565b505b604080513381526001600160a01b038b16602082015285918a917f40b442ee2bb535802063305b95f127b5101e5fce261a5dec9379683eaaad8cdb910160405180910390a3886001600160a01b0316336001600160a01b0316857f531bd8ca2b17505aaa50d843fabe2dfd9a3bb9e20c511d2288b24bd484861b02856000808e815260200190815260200160002060040160405161218e929190613571565b60405180910390a460405167016345785d8a00008152339085907f6fe296e805108cd514fea415210be4016149b01eeb08effbe130951b6a5f6c0b9060200160405180910390a350505095945050505050565b6001600160a01b0384166122375760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f20616464726573730060448201526064016109c3565b6000838152602081905260409020546001600160a01b0316331461226d5760405162461bcd60e51b81526004016109c390612f06565b6040516349e176d360e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393c2eda6906122be9086908690600401612f9d565b600060405180830381865afa1580156122db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612303919081019061341e565b905060005b815181101561241457818181518110612323576123236130f3565b6020026020010151608001516123745760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103a3930b739b332b910383937b7b360511b60448201526064016109c3565b6000858152602081905260409020600501805482908110612397576123976130f3565b90600052602060002001548282815181106123b4576123b46130f3565b602002602001015160000151146124025760405162461bcd60e51b8152602060048201526012602482015271088c2e8c240d0c2e6d040dad2e6dac2e8c6d60731b60448201526064016109c3565b8061240c8161311f565b915050612308565b50600081516001600160401b0381111561243057612430612b36565b604051908082528060200260200182016040528015612459578160200160208202803683370190505b509050600082516001600160401b0381111561247757612477612b36565b6040519080825280602002602001820160405280156124a0578160200160208202803683370190505b50905060005b8351811015612546578381815181106124c1576124c16130f3565b6020026020010151602001518382815181106124df576124df6130f3565b6020026020010181815250508381815181106124fd576124fd6130f3565b60200260200101516060015182828151811061251b5761251b6130f3565b6001600160801b0319909216602092830291909101909101528061253e8161311f565b9150506124a6565b5060008681526020818152604090912080546001600160a01b038a81166001600160a01b03198316178355855191169261258792600501919086019061273b565b50600087815260208181526040918290204260039091015590518881526001600160a01b03808b1692908416917f0ea8df787dde63a7bdc34d17097adf25749a3521f660e92dabdff8d6ee91d18a910160405180910390a386886001600160a01b03167f156aabbd131f533640c54a2c9d227cce945fa46b6e45df7a473d76203233b9b5846040516126199190613653565b60405180910390a35050505050505050565b60006003546103e861263d9190613379565b905090565b6000828152602081905260409020546001600160a01b031633146126785760405162461bcd60e51b81526004016109c390612f06565b6001600160a01b0381166126ce5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420617574686f72697a65207a65726f206164647265737300000060448201526064016109c3565b600082815260208181526040808320600601805460018101825590845291832090910180546001600160a01b0319166001600160a01b0385169081179091559051909184917f32a4407627195670dd4c989ee38441e11ab643ccd4759c25d9c0bd6a635039db9190a35050565b828054828255906000526020600020908101928215612776579160200282015b8281111561277657825182559160200191906001019061275b565b5061278292915061282d565b5090565b8280548282559060005260206000209081019282156127cc579160200282015b828111156127cc57825182906127bc90826132a1565b50916020019190600101906127a6565b50612782929150612842565b828054828255906000526020600020908101928215612776579160200282015b8281111561277657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906127f8565b5b80821115612782576000815560010161282e565b80821115612782576000612856828261285f565b50600101612842565b50805461286b90612ecc565b6000825580601f1061287b575050565b601f016020900490600052602060002090810190612899919061282d565b50565b60005b838110156128b757818101518382015260200161289f565b50506000910152565b600081518084526128d881602086016020860161289c565b601f01601f19169290920160200192915050565b6020815260006128ff60208301846128c0565b9392505050565b60006020828403121561291857600080fd5b5035919050565b6001600160a01b038816815260e060208083018290526000916129449084018a6128c0565b8860408501528760608501528660808501528560a085015283810360c08501528085518083528383019150838160051b84010184880160005b838110156129ab57601f198684030185526129998383516128c0565b9487019492509086019060010161297d565b50909e9d5050505050505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612a005783516001600160a01b0316835292840192918401916001016129db565b50909695505050505050565b80356001600160a01b0381168114612a2357600080fd5b919050565b60008060408385031215612a3b57600080fd5b612a4483612a0c565b946020939093013593505050565b60008083601f840112612a6457600080fd5b5081356001600160401b03811115612a7b57600080fd5b6020830191508360208260051b8501011115612a9657600080fd5b9250929050565b600080600060408486031215612ab257600080fd5b8335925060208401356001600160401b03811115612acf57600080fd5b612adb86828701612a52565b9497909650939450505050565b6001600160a01b038816815260e060208201819052600090612b0c908301896128c0565b6040830197909752506060810194909452608084019290925260a083015260c09091015292915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715612b6e57612b6e612b36565b60405290565b60405160a081016001600160401b0381118282101715612b6e57612b6e612b36565b604051601f8201601f191681016001600160401b0381118282101715612bbe57612bbe612b36565b604052919050565b60006001600160401b03821115612bdf57612bdf612b36565b50601f01601f191660200190565b600082601f830112612bfe57600080fd5b8135612c11612c0c82612bc6565b612b96565b818152846020838601011115612c2657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060808789031215612c5c57600080fd5b86356001600160401b0380821115612c7357600080fd5b612c7f8a838b01612a52565b90985096506020890135915080821115612c9857600080fd5b612ca48a838b01612a52565b90965094506040890135915080821115612cbd57600080fd5b50612cca89828a01612bed565b925050612cd960608801612a0c565b90509295509295509295565b60008060008060608587031215612cfb57600080fd5b612d0485612a0c565b93506020850135925060408501356001600160401b03811115612d2657600080fd5b612d3287828801612a52565b95989497509550505050565b600060208284031215612d5057600080fd5b81356001600160401b03811115612d6657600080fd5b612d7284828501612bed565b949350505050565b600080600080600060608688031215612d9257600080fd5b85356001600160401b0380821115612da957600080fd5b612db589838a01612a52565b90975095506020880135915080821115612dce57600080fd5b50612ddb88828901612a52565b9094509250612dee905060408701612a0c565b90509295509295909350565b60008060408385031215612e0d57600080fd5b50508035926020909101359150565b600080600080600060808688031215612e3457600080fd5b612e3d86612a0c565b94506020860135935060408601356001600160401b0380821115612e6057600080fd5b612e6c89838a01612bed565b94506060880135915080821115612e8257600080fd5b50612e8f88828901612a52565b969995985093965092949392505050565b60008060408385031215612eb357600080fd5b82359150612ec360208401612a0c565b90509250929050565b600181811c90821680612ee057607f821691505b602082108103612f0057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600f908201526e2737ba1030b3b2b73a1037bbb732b960891b604082015260600190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e19843603018112612f6f57600080fd5b83016020810192503590506001600160401b03811115612f8e57600080fd5b803603821315612a9657600080fd5b60208082528181018390526000906040600585901b8401810190840186845b87811015612ff657868403603f19018352612fd7828a612f58565b612fe2868284612f2f565b955050509184019190840190600101612fbc565b5091979650505050505050565b60006001600160401b0382111561301c5761301c612b36565b5060051b60200190565b80518015158114612a2357600080fd5b6000602080838503121561304957600080fd5b82516001600160401b0381111561305f57600080fd5b8301601f8101851361307057600080fd5b805161307e612c0c82613003565b81815260069190911b8201830190838101908783111561309d57600080fd5b928401925b828410156130e857604084890312156130bb5760008081fd5b6130c3612b4c565b845181526130d2868601613026565b81870152825260409390930192908401906130a2565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161313157613131613109565b5060010190565b60008261315557634e487b7160e01b600052601260045260246000fd5b500690565b600081518084526020808501945080840160005b8381101561318a5781518752958201959082019060010161316e565b509495945050505050565b6040815260006131a8604083018561315a565b82810360208401526131ba818561315a565b95945050505050565b600082516131d581846020870161289c565b9190910192915050565b60006131ed612c0c84613003565b80848252602080830192508560051b85013681111561320b57600080fd5b855b818110156132465780356001600160401b0381111561322c5760008081fd5b61323836828a01612bed565b86525093820193820161320d565b50919695505050505050565b601f82111561329c57600081815260208120601f850160051c810160208610156132795750805b601f850160051c820191505b8181101561329857828155600101613285565b5050505b505050565b81516001600160401b038111156132ba576132ba612b36565b6132ce816132c88454612ecc565b84613252565b602080601f83116001811461330357600084156132eb5750858301515b600019600386901b1c1916600185901b178555613298565b600085815260208120601f198616915b8281101561333257888601518255948401946001909101908401613313565b50858210156133505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561337357613373613109565b92915050565b8181038181111561337357613373613109565b60408152600061339f604083018661315a565b602083820381850152818583528183019050818660051b8401018760005b888110156133f757858303601f190184526133d8828b612f58565b6133e3858284612f2f565b9587019594505050908401906001016133bd565b50909998505050505050505050565b80516001600160801b031981168114612a2357600080fd5b6000602080838503121561343157600080fd5b82516001600160401b038082111561344857600080fd5b818501915085601f83011261345c57600080fd5b815161346a612c0c82613003565b81815260059190911b8301840190848101908883111561348957600080fd5b8585015b83811015613564578051858111156134a457600080fd5b860160a0818c03601f190112156134ba57600080fd5b6134c2612b74565b8882015181526040808301518a8301526060830151888111156134e55760008081fd5b8301603f81018e136134f75760008081fd5b8a810151613507612c0c82612bc6565b8181528f8483850101111561351c5760008081fd5b61352b828e830186860161289c565b8084860152505050506080613541818401613406565b606083015261355260a08401613026565b9082015284525091860191860161348d565b5098975050505050505050565b604081526000613584604083018561315a565b602083820381850152818554808452828401915060058382821b8601016000898152858120815b8581101561364257601f198985030187528282546135c881612ecc565b808752600182811680156135e357600181146135fc5761362b565b60ff198416898e01528215158a1b89018d01945061362b565b8688528c8820885b848110156136235781548f828d01015283820191508e81019050613604565b8a018e019550505b50998b0199929650505091909101906001016135ab565b50919b9a5050505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612a005783516001600160801b0319168352928401929184019160010161366f56fea26469706673582212208de1852ffbfd971889333afa3851df9bc52ce7a694da6c04b1098f4f8450764e64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106101c25760003560e01c806375794a3c116100f7578063b59d88a911610095578063d847483611610064578063d84748361461054a578063dfdad7de1461055d578063e4b7fb731461057d578063fa83d14e1461059257600080fd5b8063b59d88a9146104c2578063c5053712146104dd578063cc637afe146104f3578063d642b4b11461052e57600080fd5b806398a9ce2e116100d157806398a9ce2e14610466578063a501445214610479578063ab30be871461048c578063b1128018146104a257600080fd5b806375794a3c1461040b5780638cf44d211461042157806395d89b411461045157600080fd5b8063468765081161016457806361d027b31161013e57806361d027b31461037b5780636352211e146103af578063662ae768146103e55780637289fdd6146103f857600080fd5b80634687650814610313578063513856c81461033257806360c6d8ae1461036557600080fd5b80632b7ac3f3116101a05780632b7ac3f3146102525780633481e7bf1461029e578063389f8754146102c05780633b19e84a146102e057600080fd5b806306fdde03146101c757806319a6a6e9146101f25780631aeb542f14610225575b600080fd5b3480156101d357600080fd5b506101dc6105b2565b6040516101e991906128ec565b60405180910390f35b3480156101fe57600080fd5b5061021261020d366004612906565b610640565b6040516101e9979695949392919061291f565b34801561023157600080fd5b50610245610240366004612906565b610912565b6040516101e991906129bf565b34801561025e57600080fd5b506102867f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101e9565b3480156102aa57600080fd5b506102be6102b9366004612a28565b61097f565b005b3480156102cc57600080fd5b506102be6102db366004612a9d565b6109cc565b3480156102ec57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610286565b34801561031f57600080fd5b506004545b6040519081526020016101e9565b34801561033e57600080fd5b5061035261034d366004612906565b610ec5565b6040516101e99796959493929190612ae8565b34801561037157600080fd5b5061032460045481565b34801561038757600080fd5b506102867f000000000000000000000000000000000000000000000000000000000000000081565b3480156103bb57600080fd5b506102866103ca366004612906565b6000908152602081905260409020546001600160a01b031690565b6103246103f3366004612c43565b610f92565b610324610406366004612ce5565b6116fc565b34801561041757600080fd5b5061032460025481565b34801561042d57600080fd5b5061044161043c366004612d3e565b611755565b60405190151581526020016101e9565b34801561045d57600080fd5b506101dc611781565b610324610474366004612a28565b61178e565b610324610487366004612d7a565b6117d9565b34801561049857600080fd5b506103246103e881565b3480156104ae57600080fd5b506102be6104bd366004612dfa565b61182e565b3480156104ce57600080fd5b5067016345785d8a0000610324565b3480156104e957600080fd5b5061032460035481565b3480156104ff57600080fd5b5061044161050e366004612d3e565b805160208183018101805160018252928201919093012091525460ff1681565b34801561053a57600080fd5b5061032467016345785d8a000081565b610324610558366004612e1c565b611960565b34801561056957600080fd5b506102be610578366004612ce5565b6121e1565b34801561058957600080fd5b5061032461262b565b34801561059e57600080fd5b506102be6105ad366004612ea0565b612642565b600580546105bf90612ecc565b80601f01602080910402602001604051908101604052809291908181526020018280546105eb90612ecc565b80156106385780601f1061060d57610100808354040283529160200191610638565b820191906000526020600020905b81548152906001019060200180831161061b57829003601f168201915b505050505081565b6000818152602081815260408083208151610140810190925280546001600160a01b0316825260018101805460609486948594859485948994869493929084019161068a90612ecc565b80601f01602080910402602001604051908101604052809291908181526020018280546106b690612ecc565b80156107035780601f106106d857610100808354040283529160200191610703565b820191906000526020600020905b8154815290600101906020018083116106e657829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107f157838290600052602060002001805461076490612ecc565b80601f016020809104026020016040519081016040528092919081815260200182805461079090612ecc565b80156107dd5780601f106107b2576101008083540402835291602001916107dd565b820191906000526020600020905b8154815290600101906020018083116107c057829003601f168201915b505050505081526020019060010190610745565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561084857602002820191906000526020600020905b815481526020019060010190808311610834575b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156108aa57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161088c575b5050505050815260200160078201548152602001600882015481526020016009820154815250509050806000015181602001518260e0015183610100015184610120015185606001518660800151975097509750975097509750975050919395979092949650565b6000818152602081815260409182902060060180548351818402810184019094528084526060939283018282801561097357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610955575b50505050509050919050565b60405162461bcd60e51b815260206004820152601f60248201527f5075626c6963207472616e73666572206e6f7420696d706c656d656e7465640060448201526064015b60405180910390fd5b6000838152602081905260409020546001600160a01b03163314610a025760405162461bcd60e51b81526004016109c390612f06565b6000838152602081905260409020600501548114610a595760405162461bcd60e51b81526020600482015260146024820152730a0e4dedecc40c6deeadce840dad2e6dac2e8c6d60631b60448201526064016109c3565b60405163c2a93e3760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2a93e3790610aaa9086908690600401612f9d565b600060405180830381865afa158015610ac7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aef9190810190613036565b60008581526020818152604080832060050180548251818502810185019093528083529495509293909291830182828015610b4957602002820191906000526020600020905b815481526020019060010190808311610b35575b50505050509050600082516001600160401b03811115610b6b57610b6b612b36565b604051908082528060200260200182016040528015610b94578160200160208202803683370190505b50905060005b8351811015610c4a57838181518110610bb557610bb56130f3565b602002602001015160200151610bfd5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016109c3565b838181518110610c0f57610c0f6130f3565b602002602001015160000151828281518110610c2d57610c2d6130f3565b602090810291909101015280610c428161311f565b915050610b9a565b506000868152602081815260409091208251610c6e9260059092019184019061273b565b506000868152602081905260408120426003820155600801805491610c928361311f565b9091555050600086815260208190526040902060080154610cb590600390613138565b600003610e11576000868152602081905260408120600701805491829190610cdc8361311f565b9091555050600087815260208181526040918290206007015482518481529182015288917f06bbb7cb56b5f3845ce5ad015d25cbf87ed1c37c635e2082acb2610598f15cc7910160405180910390a2600087815260208190526040902060070154600503610d9f5760408051818152600a8183015269185b985b1e5d1a58d85b60b21b6060820152604b6020820152905188917f7917f24714b510f49ad86661d285716ae768e3e3fcc0df42f768b3134d57a7e9919081900360800190a2610e0f565b600087815260208190526040902060070154600a03610e0f5760408051818152600a8183015269656d706174686574696360b01b6060820152605a6020820152905188917f7917f24714b510f49ad86661d285716ae768e3e3fcc0df42f768b3134d57a7e9919081900360800190a25b505b857f51fa73895ca2bd4c7f525775384b199b6047f069e662b82aa9e1b0998b9c29758383604051610e43929190613195565b60405180910390a2857f871f9739b79e9efd6285318758001f00502185ff0d254a080922cd80580c3e0282600081518110610e8057610e806130f3565b60200260200101516000808a815260200190815260200160002060070154604051610eb5929190918252602082015260400190565b60405180910390a2505050505050565b600060208190529081526040902080546001820180546001600160a01b039092169291610ef190612ecc565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1d90612ecc565b8015610f6a5780601f10610f3f57610100808354040283529160200191610f6a565b820191906000526020600020905b815481529060010190602001808311610f4d57829003601f168201915b5050505050908060020154908060030154908060070154908060080154908060090154905087565b60006001600160a01b038216610fea5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f2061646472657373000000000060448201526064016109c3565b8386146110495760405162461bcd60e51b815260206004820152602760248201527f4465736372697074696f6e7320616e642070726f6f6673206c656e677468206d6044820152660d2e6dac2e8c6d60cb1b60648201526084016109c3565b6103e86003541061109c5760405162461bcd60e51b815260206004820152601c60248201527f4d6178696d756d206167656e7473206c696d697420726561636865640000000060448201526064016109c3565b600083511180156110af57506020835111155b6110f05760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206167656e74206e616d6560701b60448201526064016109c3565b60018360405161110091906131c3565b9081526040519081900360200190205460ff161561115c5760405162461bcd60e51b81526020600482015260196024820152784167656e74206e616d6520616c72656164792065786973747360381b60448201526064016109c3565b67016345785d8a00003410156111b45760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74207061796d656e7420666f72206d696e74696e6760448201526064016109c3565b60405163c2a93e3760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2a93e3790611205908b908b90600401612f9d565b600060405180830381865afa158015611222573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261124a9190810190613036565b9050600081516001600160401b0381111561126757611267612b36565b604051908082528060200260200182016040528015611290578160200160208202803683370190505b50905060005b8251811015611346578281815181106112b1576112b16130f3565b6020026020010151602001516112f95760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016109c3565b82818151811061130b5761130b6130f3565b602002602001015160000151828281518110611329576113296130f3565b60209081029190910101528061133e8161311f565b915050611296565b506001808660405161135891906131c3565b908152604051908190036020019020805491151560ff19909216919091179055600280549060006113888361311f565b919050559250604051806101400160405280856001600160a01b031681526020018681526020014281526020014281526020018888906113c891906131df565b815260208082018490526040805160008082528184018352828501919091526001606085018190526080850182905260a090940181905287815280835220835181546001600160a01b0319166001600160a01b0390911617815590830151909182019061143590826132a1565b50604082015160028201556060820151600382015560808201518051611465916004840191602090910190612786565b5060a0820151805161148191600584019160209091019061273b565b5060c0820151805161149d9160068401916020909101906127d8565b5060e08201516007820155610100820151600882015561012090910151600990910155600380549060006114d08361311f565b919050555067016345785d8a0000600460008282546114ef9190613360565b90915550506040516000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169067016345785d8a0000908381818185875af1925050503d8060008114611567576040519150601f19603f3d011682016040523d82523d6000602084013e61156c565b606091505b50509050806115b75760405162461bcd60e51b8152602060048201526017602482015276151c99585cdd5c9e481c185e5b595b9d0819985a5b1959604a1b60448201526064016109c3565b67016345785d8a0000341115611660576000336115dc67016345785d8a000034613379565b604051600081818185875af1925050503d8060008114611618576040519150601f19603f3d011682016040523d82523d6000602084013e61161d565b606091505b505090508061165e5760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b60448201526064016109c3565b505b846001600160a01b0316336001600160a01b0316857f531bd8ca2b17505aaa50d843fabe2dfd9a3bb9e20c511d2288b24bd484861b02858c8c6040516116a89392919061338c565b60405180910390a460405167016345785d8a00008152339085907f6fe296e805108cd514fea415210be4016149b01eeb08effbe130951b6a5f6c0b9060200160405180910390a35050509695505050505050565b60405162461bcd60e51b815260206004820152602560248201527f55736520636c6f6e652077697468206e65774167656e744e616d65207061726160448201526436b2ba32b960d91b60648201526000906084016109c3565b600060018260405161176791906131c3565b9081526040519081900360200190205460ff161592915050565b600680546105bf90612ecc565b60405162461bcd60e51b815260206004820152601c60248201527f5075626c696320636c6f6e65206e6f7420696d706c656d656e7465640000000060448201526000906064016109c3565b60405162461bcd60e51b815260206004820152602160248201527f557365206d696e742077697468206167656e744e616d6520706172616d6574656044820152603960f91b60648201526000906084016109c3565b6000828152602081905260409020546001600160a01b031633146118645760405162461bcd60e51b81526004016109c390612f06565b60008281526020819052604081206009018054916118818361311f565b90915550506000828152602081905260409020426003820155600901546118aa90600a90613138565b6000036119225760008281526020819052604081206007018054918291906118d18361311f565b9091555050600083815260208181526040918290206007015482518481529182015284917f06bbb7cb56b5f3845ce5ad015d25cbf87ed1c37c635e2082acb2610598f15cc7910160405180910390a2505b817f0a8164b6bc90562f210a3f5fc6182ee67125e8148743a34f0bdca046396380b88260405161195491815260200190565b60405180910390a25050565b60006001600160a01b0386166119b85760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f7420636c6f6e6520746f207a65726f20616464726573730000000060448201526064016109c3565b6000858152602081905260409020546001600160a01b031633146119ee5760405162461bcd60e51b81526004016109c390612f06565b6103e860035410611a415760405162461bcd60e51b815260206004820152601c60248201527f4d6178696d756d206167656e7473206c696d697420726561636865640000000060448201526064016109c3565b60008451118015611a5457506020845111155b611a955760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206167656e74206e616d6560701b60448201526064016109c3565b600184604051611aa591906131c3565b9081526040519081900360200190205460ff1615611b015760405162461bcd60e51b81526020600482015260196024820152784167656e74206e616d6520616c72656164792065786973747360381b60448201526064016109c3565b67016345785d8a0000341015611b595760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74207061796d656e7420666f7220636c6f6e696e6760448201526064016109c3565b6040516349e176d360e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393c2eda690611baa9087908790600401612f9d565b600060405180830381865afa158015611bc7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bef919081019061341e565b9050600081516001600160401b03811115611c0c57611c0c612b36565b604051908082528060200260200182016040528015611c35578160200160208202803683370190505b50905060005b8251811015611cf157828181518110611c5657611c566130f3565b602002602001015160800151611ca45760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21031b637b73290383937b7b360691b60448201526064016109c3565b828181518110611cb657611cb66130f3565b602002602001015160200151828281518110611cd457611cd46130f3565b602090810291909101015280611ce98161311f565b915050611c3b565b5060018087604051611d0391906131c3565b908152604051908190036020019020805491151560ff1990921691909117905560028054906000611d338361311f565b919050559250604051806101400160405280896001600160a01b031681526020018781526020014281526020014281526020016000808a8152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b82821015611e47578382906000526020600020018054611dba90612ecc565b80601f0160208091040260200160405190810160405280929190818152602001828054611de690612ecc565b8015611e335780601f10611e0857610100808354040283529160200191611e33565b820191906000526020600020905b815481529060010190602001808311611e1657829003601f168201915b505050505081526020019060010190611d9b565b5050509082525060208082018490526040805160008082528184018352828501919091528b81528083528181206007015460608501526080840181905260a0909301839052868352828252909120825181546001600160a01b0319166001600160a01b03909116178155908201516001820190611ec490826132a1565b50604082015160028201556060820151600382015560808201518051611ef4916004840191602090910190612786565b5060a08201518051611f1091600584019160209091019061273b565b5060c08201518051611f2c9160068401916020909101906127d8565b5060e0820151600782015561010082015160088201556101209091015160099091015560038054906000611f5f8361311f565b919050555067016345785d8a000060046000828254611f7e9190613360565b90915550506040516000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169067016345785d8a0000908381818185875af1925050503d8060008114611ff6576040519150601f19603f3d011682016040523d82523d6000602084013e611ffb565b606091505b50509050806120465760405162461bcd60e51b8152602060048201526017602482015276151c99585cdd5c9e481c185e5b595b9d0819985a5b1959604a1b60448201526064016109c3565b67016345785d8a00003411156120ef5760003361206b67016345785d8a000034613379565b604051600081818185875af1925050503d80600081146120a7576040519150601f19603f3d011682016040523d82523d6000602084013e6120ac565b606091505b50509050806120ed5760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b60448201526064016109c3565b505b604080513381526001600160a01b038b16602082015285918a917f40b442ee2bb535802063305b95f127b5101e5fce261a5dec9379683eaaad8cdb910160405180910390a3886001600160a01b0316336001600160a01b0316857f531bd8ca2b17505aaa50d843fabe2dfd9a3bb9e20c511d2288b24bd484861b02856000808e815260200190815260200160002060040160405161218e929190613571565b60405180910390a460405167016345785d8a00008152339085907f6fe296e805108cd514fea415210be4016149b01eeb08effbe130951b6a5f6c0b9060200160405180910390a350505095945050505050565b6001600160a01b0384166122375760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f20616464726573730060448201526064016109c3565b6000838152602081905260409020546001600160a01b0316331461226d5760405162461bcd60e51b81526004016109c390612f06565b6040516349e176d360e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393c2eda6906122be9086908690600401612f9d565b600060405180830381865afa1580156122db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612303919081019061341e565b905060005b815181101561241457818181518110612323576123236130f3565b6020026020010151608001516123745760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103a3930b739b332b910383937b7b360511b60448201526064016109c3565b6000858152602081905260409020600501805482908110612397576123976130f3565b90600052602060002001548282815181106123b4576123b46130f3565b602002602001015160000151146124025760405162461bcd60e51b8152602060048201526012602482015271088c2e8c240d0c2e6d040dad2e6dac2e8c6d60731b60448201526064016109c3565b8061240c8161311f565b915050612308565b50600081516001600160401b0381111561243057612430612b36565b604051908082528060200260200182016040528015612459578160200160208202803683370190505b509050600082516001600160401b0381111561247757612477612b36565b6040519080825280602002602001820160405280156124a0578160200160208202803683370190505b50905060005b8351811015612546578381815181106124c1576124c16130f3565b6020026020010151602001518382815181106124df576124df6130f3565b6020026020010181815250508381815181106124fd576124fd6130f3565b60200260200101516060015182828151811061251b5761251b6130f3565b6001600160801b0319909216602092830291909101909101528061253e8161311f565b9150506124a6565b5060008681526020818152604090912080546001600160a01b038a81166001600160a01b03198316178355855191169261258792600501919086019061273b565b50600087815260208181526040918290204260039091015590518881526001600160a01b03808b1692908416917f0ea8df787dde63a7bdc34d17097adf25749a3521f660e92dabdff8d6ee91d18a910160405180910390a386886001600160a01b03167f156aabbd131f533640c54a2c9d227cce945fa46b6e45df7a473d76203233b9b5846040516126199190613653565b60405180910390a35050505050505050565b60006003546103e861263d9190613379565b905090565b6000828152602081905260409020546001600160a01b031633146126785760405162461bcd60e51b81526004016109c390612f06565b6001600160a01b0381166126ce5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420617574686f72697a65207a65726f206164647265737300000060448201526064016109c3565b600082815260208181526040808320600601805460018101825590845291832090910180546001600160a01b0319166001600160a01b0385169081179091559051909184917f32a4407627195670dd4c989ee38441e11ab643ccd4759c25d9c0bd6a635039db9190a35050565b828054828255906000526020600020908101928215612776579160200282015b8281111561277657825182559160200191906001019061275b565b5061278292915061282d565b5090565b8280548282559060005260206000209081019282156127cc579160200282015b828111156127cc57825182906127bc90826132a1565b50916020019190600101906127a6565b50612782929150612842565b828054828255906000526020600020908101928215612776579160200282015b8281111561277657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906127f8565b5b80821115612782576000815560010161282e565b80821115612782576000612856828261285f565b50600101612842565b50805461286b90612ecc565b6000825580601f1061287b575050565b601f016020900490600052602060002090810190612899919061282d565b50565b60005b838110156128b757818101518382015260200161289f565b50506000910152565b600081518084526128d881602086016020860161289c565b601f01601f19169290920160200192915050565b6020815260006128ff60208301846128c0565b9392505050565b60006020828403121561291857600080fd5b5035919050565b6001600160a01b038816815260e060208083018290526000916129449084018a6128c0565b8860408501528760608501528660808501528560a085015283810360c08501528085518083528383019150838160051b84010184880160005b838110156129ab57601f198684030185526129998383516128c0565b9487019492509086019060010161297d565b50909e9d5050505050505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612a005783516001600160a01b0316835292840192918401916001016129db565b50909695505050505050565b80356001600160a01b0381168114612a2357600080fd5b919050565b60008060408385031215612a3b57600080fd5b612a4483612a0c565b946020939093013593505050565b60008083601f840112612a6457600080fd5b5081356001600160401b03811115612a7b57600080fd5b6020830191508360208260051b8501011115612a9657600080fd5b9250929050565b600080600060408486031215612ab257600080fd5b8335925060208401356001600160401b03811115612acf57600080fd5b612adb86828701612a52565b9497909650939450505050565b6001600160a01b038816815260e060208201819052600090612b0c908301896128c0565b6040830197909752506060810194909452608084019290925260a083015260c09091015292915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715612b6e57612b6e612b36565b60405290565b60405160a081016001600160401b0381118282101715612b6e57612b6e612b36565b604051601f8201601f191681016001600160401b0381118282101715612bbe57612bbe612b36565b604052919050565b60006001600160401b03821115612bdf57612bdf612b36565b50601f01601f191660200190565b600082601f830112612bfe57600080fd5b8135612c11612c0c82612bc6565b612b96565b818152846020838601011115612c2657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060808789031215612c5c57600080fd5b86356001600160401b0380821115612c7357600080fd5b612c7f8a838b01612a52565b90985096506020890135915080821115612c9857600080fd5b612ca48a838b01612a52565b90965094506040890135915080821115612cbd57600080fd5b50612cca89828a01612bed565b925050612cd960608801612a0c565b90509295509295509295565b60008060008060608587031215612cfb57600080fd5b612d0485612a0c565b93506020850135925060408501356001600160401b03811115612d2657600080fd5b612d3287828801612a52565b95989497509550505050565b600060208284031215612d5057600080fd5b81356001600160401b03811115612d6657600080fd5b612d7284828501612bed565b949350505050565b600080600080600060608688031215612d9257600080fd5b85356001600160401b0380821115612da957600080fd5b612db589838a01612a52565b90975095506020880135915080821115612dce57600080fd5b50612ddb88828901612a52565b9094509250612dee905060408701612a0c565b90509295509295909350565b60008060408385031215612e0d57600080fd5b50508035926020909101359150565b600080600080600060808688031215612e3457600080fd5b612e3d86612a0c565b94506020860135935060408601356001600160401b0380821115612e6057600080fd5b612e6c89838a01612bed565b94506060880135915080821115612e8257600080fd5b50612e8f88828901612a52565b969995985093965092949392505050565b60008060408385031215612eb357600080fd5b82359150612ec360208401612a0c565b90509250929050565b600181811c90821680612ee057607f821691505b602082108103612f0057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600f908201526e2737ba1030b3b2b73a1037bbb732b960891b604082015260600190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e19843603018112612f6f57600080fd5b83016020810192503590506001600160401b03811115612f8e57600080fd5b803603821315612a9657600080fd5b60208082528181018390526000906040600585901b8401810190840186845b87811015612ff657868403603f19018352612fd7828a612f58565b612fe2868284612f2f565b955050509184019190840190600101612fbc565b5091979650505050505050565b60006001600160401b0382111561301c5761301c612b36565b5060051b60200190565b80518015158114612a2357600080fd5b6000602080838503121561304957600080fd5b82516001600160401b0381111561305f57600080fd5b8301601f8101851361307057600080fd5b805161307e612c0c82613003565b81815260069190911b8201830190838101908783111561309d57600080fd5b928401925b828410156130e857604084890312156130bb5760008081fd5b6130c3612b4c565b845181526130d2868601613026565b81870152825260409390930192908401906130a2565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161313157613131613109565b5060010190565b60008261315557634e487b7160e01b600052601260045260246000fd5b500690565b600081518084526020808501945080840160005b8381101561318a5781518752958201959082019060010161316e565b509495945050505050565b6040815260006131a8604083018561315a565b82810360208401526131ba818561315a565b95945050505050565b600082516131d581846020870161289c565b9190910192915050565b60006131ed612c0c84613003565b80848252602080830192508560051b85013681111561320b57600080fd5b855b818110156132465780356001600160401b0381111561322c5760008081fd5b61323836828a01612bed565b86525093820193820161320d565b50919695505050505050565b601f82111561329c57600081815260208120601f850160051c810160208610156132795750805b601f850160051c820191505b8181101561329857828155600101613285565b5050505b505050565b81516001600160401b038111156132ba576132ba612b36565b6132ce816132c88454612ecc565b84613252565b602080601f83116001811461330357600084156132eb5750858301515b600019600386901b1c1916600185901b178555613298565b600085815260208120601f198616915b8281101561333257888601518255948401946001909101908401613313565b50858210156133505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561337357613373613109565b92915050565b8181038181111561337357613373613109565b60408152600061339f604083018661315a565b602083820381850152818583528183019050818660051b8401018760005b888110156133f757858303601f190184526133d8828b612f58565b6133e3858284612f2f565b9587019594505050908401906001016133bd565b50909998505050505050505050565b80516001600160801b031981168114612a2357600080fd5b6000602080838503121561343157600080fd5b82516001600160401b038082111561344857600080fd5b818501915085601f83011261345c57600080fd5b815161346a612c0c82613003565b81815260059190911b8301840190848101908883111561348957600080fd5b8585015b83811015613564578051858111156134a457600080fd5b860160a0818c03601f190112156134ba57600080fd5b6134c2612b74565b8882015181526040808301518a8301526060830151888111156134e55760008081fd5b8301603f81018e136134f75760008081fd5b8a810151613507612c0c82612bc6565b8181528f8483850101111561351c5760008081fd5b61352b828e830186860161289c565b8084860152505050506080613541818401613406565b606083015261355260a08401613026565b9082015284525091860191860161348d565b5098975050505050505050565b604081526000613584604083018561315a565b602083820381850152818554808452828401915060058382821b8601016000898152858120815b8581101561364257601f198985030187528282546135c881612ecc565b808752600182811680156135e357600181146135fc5761362b565b60ff198416898e01528215158a1b89018d01945061362b565b8688528c8820885b848110156136235781548f828d01015283820191508e81019050613604565b8a018e019550505b50998b0199929650505091909101906001016135ab565b50919b9a5050505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612a005783516001600160801b0319168352928401929184019160010161366f56fea26469706673582212208de1852ffbfd971889333afa3851df9bc52ce7a694da6c04b1098f4f8450764e64736f6c63430008140033",
  "devdoc": {
    "details": "Enhanced version with agent naming, supply limit, and minting fee for testnet deployment",
    "events": {
      "AuthorizedUsage(uint256,address)": {
        "details": "This emits when a user is authorized to use the data"
      },
      "Cloned(uint256,uint256,address,address)": {
        "details": "This emits when data is cloned"
      },
      "Minted(uint256,address,address,bytes32[],string[])": {
        "details": "This emits when a new functional NFT is minted"
      },
      "PublishedSealedKey(address,uint256,bytes16[])": {
        "details": "This emits when a sealed key is published"
      },
      "Transferred(uint256,address,address)": {
        "details": "This emits when data is transferred with ownership"
      }
    },
    "kind": "dev",
    "methods": {
      "authorizeUsage(uint256,address)": {
        "params": {
          "tokenId": "Agent to authorize",
          "user": "User to authorize"
        }
      },
      "clone(address,uint256,string,bytes[])": {
        "params": {
          "newAgentName": "Name for the cloned agent",
          "proofs": "Clone proofs",
          "to": "Address to clone agent for",
          "tokenId": "Agent to clone"
        },
        "returns": {
          "newTokenId": "The cloned agent token ID"
        }
      },
      "mint(bytes[],string[],string,address)": {
        "params": {
          "agentName": "User-given name for the agent",
          "descriptions": "Data type descriptions",
          "proofs": "Ownership proofs for initial data",
          "to": "Address to mint agent for"
        },
        "returns": {
          "tokenId": "The newly minted agent token ID"
        }
      },
      "recordConversation(uint256,bytes32)": {
        "params": {
          "conversationHash": "Hash of conversation data stored in 0G",
          "tokenId": "Agent that had conversation"
        }
      },
      "transfer(address,uint256,bytes[])": {
        "params": {
          "proofs": "Transfer validity proofs",
          "to": "New owner address",
          "tokenId": "Agent to transfer"
        }
      },
      "update(uint256,bytes[])": {
        "params": {
          "proofs": "New data proofs",
          "tokenId": "Agent to update"
        }
      }
    },
    "stateVariables": {
      "verifier": {
        "return": "The address of the verifier contract",
        "returns": {
          "_0": "The address of the verifier contract"
        }
      }
    },
    "title": "DreamAgentNFT - Personalized AI Dream Analysis Agents",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "authorizeUsage(uint256,address)": {
        "notice": "Authorize user to use agent (but not own)"
      },
      "clone(address,uint256,string,bytes[])": {
        "notice": "Clone agent (create copy with same intelligence and personality)"
      },
      "getMintingFee()": {
        "notice": "Get minting fee in wei"
      },
      "getRemainingSupply()": {
        "notice": "Get remaining agent supply"
      },
      "getTotalFeesCollected()": {
        "notice": "Get total fees collected"
      },
      "getTreasury()": {
        "notice": "Get treasury address"
      },
      "isNameAvailable(string)": {
        "notice": "Check if agent name is available"
      },
      "mint(bytes[],string[],string,address)": {
        "notice": "Mint a new personalized dream agent for a user"
      },
      "recordConversation(uint256,bytes32)": {
        "notice": "Record a conversation with the agent (for personality development)"
      },
      "transfer(address,uint256,bytes[])": {
        "notice": "Transfer agent with intelligence to new owner"
      },
      "update(uint256,bytes[])": {
        "notice": "Update agent data with new dream information"
      },
      "verifier()": {
        "notice": "The verifier interface that this NFT uses"
      }
    },
    "notice": "Manages personalized dream agents with encrypted intelligence stored in 0G Storage",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 55,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "agents",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(DreamAgent)50_storage)"
      },
      {
        "astId": 59,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "nameExists",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 62,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "nextTokenId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 65,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "totalAgents",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 68,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "totalFeesCollected",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 71,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "name",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "symbol",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(DreamAgent)50_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DreamAgentNFT.DreamAgent)",
        "numberOfBytes": "32",
        "value": "t_struct(DreamAgent)50_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DreamAgent)50_storage": {
        "encoding": "inplace",
        "label": "struct DreamAgentNFT.DreamAgent",
        "members": [
          {
            "astId": 28,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 30,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "agentName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 32,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "createdAt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 34,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "lastUpdated",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 37,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "dataDescriptions",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 40,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "dataHashes",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 43,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "authorizedUsers",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 45,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "intelligenceLevel",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 47,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "dreamCount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 49,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "conversationCount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}