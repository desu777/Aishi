{
  "address": "0xDcE93Cc4e8a32d8fC3d5c2Db56944Fa9d19d2a04",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldLevel",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLevel",
          "type": "uint256"
        }
      ],
      "name": "AgentEvolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "AuthorizedUsage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_newTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "Cloned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "dreamHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newIntelligenceLevel",
          "type": "uint256"
        }
      ],
      "name": "DreamProcessed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "_dataHashes",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_dataDescriptions",
          "type": "string[]"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes16[]",
          "name": "_sealedKeys",
          "type": "bytes16[]"
        }
      ],
      "name": "PublishedSealedKey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "Transferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "oldDataHashes",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "newDataHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "Updated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agents",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "intelligenceLevel",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dreamCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "authorizeUsage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "authorizedUsersOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "proofs",
          "type": "bytes[]"
        }
      ],
      "name": "clone",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "clonePublic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getAgentInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "intelligenceLevel",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dreamCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "dataDescriptions",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "proofs",
          "type": "bytes[]"
        },
        {
          "internalType": "string[]",
          "name": "descriptions",
          "type": "string[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAgents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "proofs",
          "type": "bytes[]"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferPublic",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "proofs",
          "type": "bytes[]"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IERC7857DataVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x4a4db4dc2c838926e25cbcd16589b4f66c748d3675ba2f594717143f69713e6b",
  "receipt": {
    "to": null,
    "from": "0x232CA04565A7aAffff9b715D88562E48715e9185",
    "contractAddress": "0xDcE93Cc4e8a32d8fC3d5c2Db56944Fa9d19d2a04",
    "transactionIndex": 33,
    "gasUsed": "2267021",
    "logsBloom": "0x
    "blockHash": "0xeea9b7e3c0ac01e65b271b4e63c04998241b81b3ef72e0b1a2a33ca3a0c1f154",
    "transactionHash": "0x4a4db4dc2c838926e25cbcd16589b4f66c748d3675ba2f594717143f69713e6b",
    "logs": [],
    "blockNumber": 2956945,
    "cumulativeGasUsed": "8814390",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5BeD3AAFb930128ed20Beed927733b796C33C8BA"
  ],
  "numDeployments": 1,
  "solcInputHash": "669b42a2f3608232a9f4c016b83cb789",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLevel\",\"type\":\"uint256\"}],\"name\":\"AgentEvolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AuthorizedUsage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"Cloned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"dreamHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newIntelligenceLevel\",\"type\":\"uint256\"}],\"name\":\"DreamProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"_dataHashes\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_dataDescriptions\",\"type\":\"string[]\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes16[]\",\"name\":\"_sealedKeys\",\"type\":\"bytes16[]\"}],\"name\":\"PublishedSealedKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"oldDataHashes\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"newDataHashes\",\"type\":\"bytes32[]\"}],\"name\":\"Updated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intelligenceLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dreamCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"authorizeUsage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"authorizedUsersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"}],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clonePublic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAgentInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"intelligenceLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dreamCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"dataDescriptions\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"},{\"internalType\":\"string[]\",\"name\":\"descriptions\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAgents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferPublic\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IERC7857DataVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simplified version for Dreamscape testing, based on ERC-7857 standard\",\"events\":{\"AuthorizedUsage(uint256,address)\":{\"details\":\"This emits when a user is authorized to use the data\"},\"Cloned(uint256,uint256,address,address)\":{\"details\":\"This emits when data is cloned\"},\"Minted(uint256,address,address,bytes32[],string[])\":{\"details\":\"This emits when a new functional NFT is minted\"},\"PublishedSealedKey(address,uint256,bytes16[])\":{\"details\":\"This emits when a sealed key is published\"},\"Transferred(uint256,address,address)\":{\"details\":\"This emits when data is transferred with ownership\"}},\"kind\":\"dev\",\"methods\":{\"authorizeUsage(uint256,address)\":{\"params\":{\"tokenId\":\"Agent to authorize\",\"user\":\"User to authorize\"}},\"clone(address,uint256,bytes[])\":{\"params\":{\"proofs\":\"Clone proofs\",\"to\":\"Address to clone agent for\",\"tokenId\":\"Agent to clone\"},\"returns\":{\"newTokenId\":\"The cloned agent token ID\"}},\"mint(bytes[],string[],address)\":{\"params\":{\"descriptions\":\"Data type descriptions\",\"proofs\":\"Ownership proofs for initial data\",\"to\":\"Address to mint agent for\"},\"returns\":{\"tokenId\":\"The newly minted agent token ID\"}},\"transfer(address,uint256,bytes[])\":{\"params\":{\"proofs\":\"Transfer validity proofs\",\"to\":\"New owner address\",\"tokenId\":\"Agent to transfer\"}},\"update(uint256,bytes[])\":{\"params\":{\"proofs\":\"New data proofs\",\"tokenId\":\"Agent to update\"}}},\"stateVariables\":{\"verifier\":{\"return\":\"The address of the verifier contract\",\"returns\":{\"_0\":\"The address of the verifier contract\"}}},\"title\":\"DreamAgentNFT - Intelligent NFT for Dream Analysis Agents\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeUsage(uint256,address)\":{\"notice\":\"Authorize user to use agent (but not own)\"},\"clone(address,uint256,bytes[])\":{\"notice\":\"Clone agent (create copy with same intelligence)\"},\"mint(bytes[],string[],address)\":{\"notice\":\"Mint a new dream agent for a user\"},\"transfer(address,uint256,bytes[])\":{\"notice\":\"Transfer agent with intelligence to new owner\"},\"update(uint256,bytes[])\":{\"notice\":\"Update agent data with new dream information\"},\"verifier()\":{\"notice\":\"The verifier interface that this NFT uses\"}},\"notice\":\"Manages dream agents with encrypted intelligence stored in 0G Storage\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DreamAgentNFT.sol\":\"DreamAgentNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DreamAgentNFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"./interfaces/IERC7857.sol\\\";\\r\\nimport \\\"./interfaces/IERC7857DataVerifier.sol\\\";\\r\\n\\r\\n/// @title DreamAgentNFT - Intelligent NFT for Dream Analysis Agents\\r\\n/// @notice Manages dream agents with encrypted intelligence stored in 0G Storage\\r\\n/// @dev Simplified version for Dreamscape testing, based on ERC-7857 standard\\r\\ncontract DreamAgentNFT is IERC7857 {\\r\\n    \\r\\n    // Data types for dream agents\\r\\n    string constant DREAM_PATTERNS = \\\"dream_patterns\\\";\\r\\n    string constant EMOTIONAL_PROFILE = \\\"emotional_profile\\\";\\r\\n    string constant AGENT_INTELLIGENCE = \\\"agent_intelligence\\\";\\r\\n    \\r\\n    struct DreamAgent {\\r\\n        address owner;\\r\\n        uint256 createdAt;\\r\\n        uint256 lastUpdated;\\r\\n        string[] dataDescriptions;  // Types of data stored\\r\\n        bytes32[] dataHashes;       // 0G Storage hashes\\r\\n        address[] authorizedUsers;  // Authorized to use but not own\\r\\n        uint256 intelligenceLevel;  // Agent's learning progress\\r\\n        uint256 dreamCount;         // Number of dreams processed\\r\\n    }\\r\\n    \\r\\n    // Contract state\\r\\n    mapping(uint256 => DreamAgent) public agents;\\r\\n    uint256 public nextTokenId = 1;\\r\\n    uint256 public totalAgents = 0;\\r\\n    \\r\\n    // Contract metadata\\r\\n    string public name = \\\"Dream Agent NFT\\\";\\r\\n    string public symbol = \\\"DREAM\\\";\\r\\n    \\r\\n    // Verifier for proof validation\\r\\n    IERC7857DataVerifier public immutable verifier;\\r\\n    \\r\\n    // Events\\r\\n    event Updated(uint256 indexed tokenId, bytes32[] oldDataHashes, bytes32[] newDataHashes);\\r\\n    event DreamProcessed(uint256 indexed tokenId, bytes32 dreamHash, uint256 newIntelligenceLevel);\\r\\n    event AgentEvolved(uint256 indexed tokenId, uint256 oldLevel, uint256 newLevel);\\r\\n    \\r\\n    constructor(address _verifier) {\\r\\n        require(_verifier != address(0), \\\"Verifier cannot be zero address\\\");\\r\\n        verifier = IERC7857DataVerifier(_verifier);\\r\\n    }\\r\\n    \\r\\n    /// @notice Mint a new dream agent for a user\\r\\n    /// @param proofs Ownership proofs for initial data\\r\\n    /// @param descriptions Data type descriptions\\r\\n    /// @param to Address to mint agent for\\r\\n    /// @return tokenId The newly minted agent token ID\\r\\n    function mint(\\r\\n        bytes[] calldata proofs,\\r\\n        string[] calldata descriptions,\\r\\n        address to\\r\\n    ) external payable override returns (uint256 tokenId) {\\r\\n        require(to != address(0), \\\"Cannot mint to zero address\\\");\\r\\n        require(descriptions.length == proofs.length, \\\"Descriptions and proofs length mismatch\\\");\\r\\n        \\r\\n        // Verify proofs\\r\\n        PreimageProofOutput[] memory proofOutputs = verifier.verifyPreimage(proofs);\\r\\n        bytes32[] memory dataHashes = new bytes32[](proofOutputs.length);\\r\\n        \\r\\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\r\\n            require(proofOutputs[i].isValid, \\\"Invalid proof\\\");\\r\\n            dataHashes[i] = proofOutputs[i].dataHash;\\r\\n        }\\r\\n        \\r\\n        // Create new agent\\r\\n        tokenId = nextTokenId++;\\r\\n        agents[tokenId] = DreamAgent({\\r\\n            owner: to,\\r\\n            createdAt: block.timestamp,\\r\\n            lastUpdated: block.timestamp,\\r\\n            dataDescriptions: descriptions,\\r\\n            dataHashes: dataHashes,\\r\\n            authorizedUsers: new address[](0),\\r\\n            intelligenceLevel: 1,\\r\\n            dreamCount: 0\\r\\n        });\\r\\n        \\r\\n        totalAgents++;\\r\\n        \\r\\n        emit Minted(tokenId, msg.sender, to, dataHashes, descriptions);\\r\\n        \\r\\n        return tokenId;\\r\\n    }\\r\\n    \\r\\n    /// @notice Update agent data with new dream information\\r\\n    /// @param tokenId Agent to update\\r\\n    /// @param proofs New data proofs\\r\\n    function update(uint256 tokenId, bytes[] calldata proofs) external {\\r\\n        require(agents[tokenId].owner == msg.sender, \\\"Not agent owner\\\");\\r\\n        require(proofs.length == agents[tokenId].dataHashes.length, \\\"Proof count mismatch\\\");\\r\\n        \\r\\n        // Verify proofs\\r\\n        PreimageProofOutput[] memory proofOutputs = verifier.verifyPreimage(proofs);\\r\\n        bytes32[] memory oldDataHashes = agents[tokenId].dataHashes;\\r\\n        bytes32[] memory newDataHashes = new bytes32[](proofOutputs.length);\\r\\n        \\r\\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\r\\n            require(proofOutputs[i].isValid, \\\"Invalid proof\\\");\\r\\n            newDataHashes[i] = proofOutputs[i].dataHash;\\r\\n        }\\r\\n        \\r\\n        // Update agent\\r\\n        agents[tokenId].dataHashes = newDataHashes;\\r\\n        agents[tokenId].lastUpdated = block.timestamp;\\r\\n        agents[tokenId].dreamCount++;\\r\\n        \\r\\n        // Evolution logic: increase intelligence every 5 dreams\\r\\n        if (agents[tokenId].dreamCount % 5 == 0) {\\r\\n            uint256 oldLevel = agents[tokenId].intelligenceLevel;\\r\\n            agents[tokenId].intelligenceLevel++;\\r\\n            emit AgentEvolved(tokenId, oldLevel, agents[tokenId].intelligenceLevel);\\r\\n        }\\r\\n        \\r\\n        emit Updated(tokenId, oldDataHashes, newDataHashes);\\r\\n        emit DreamProcessed(tokenId, newDataHashes[0], agents[tokenId].intelligenceLevel);\\r\\n    }\\r\\n    \\r\\n    /// @notice Transfer agent with intelligence to new owner\\r\\n    /// @param to New owner address\\r\\n    /// @param tokenId Agent to transfer\\r\\n    /// @param proofs Transfer validity proofs\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 tokenId,\\r\\n        bytes[] calldata proofs\\r\\n    ) external override {\\r\\n        require(to != address(0), \\\"Cannot transfer to zero address\\\");\\r\\n        require(agents[tokenId].owner == msg.sender, \\\"Not agent owner\\\");\\r\\n        \\r\\n        // Verify transfer proofs\\r\\n        TransferValidityProofOutput[] memory proofOutputs = verifier.verifyTransferValidity(proofs);\\r\\n        \\r\\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\r\\n            require(proofOutputs[i].isValid, \\\"Invalid transfer proof\\\");\\r\\n            require(proofOutputs[i].oldDataHash == agents[tokenId].dataHashes[i], \\\"Data hash mismatch\\\");\\r\\n        }\\r\\n        \\r\\n        // Update agent data hashes for new owner\\r\\n        bytes32[] memory newDataHashes = new bytes32[](proofOutputs.length);\\r\\n        bytes16[] memory sealedKeys = new bytes16[](proofOutputs.length);\\r\\n        \\r\\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\r\\n            newDataHashes[i] = proofOutputs[i].newDataHash;\\r\\n            sealedKeys[i] = proofOutputs[i].sealedKey;\\r\\n        }\\r\\n        \\r\\n        // Transfer ownership\\r\\n        address from = agents[tokenId].owner;\\r\\n        agents[tokenId].owner = to;\\r\\n        agents[tokenId].dataHashes = newDataHashes;\\r\\n        agents[tokenId].lastUpdated = block.timestamp;\\r\\n        \\r\\n        emit Transferred(tokenId, from, to);\\r\\n        emit PublishedSealedKey(to, tokenId, sealedKeys);\\r\\n    }\\r\\n    \\r\\n    /// @notice Clone agent (create copy with same intelligence)\\r\\n    /// @param to Address to clone agent for\\r\\n    /// @param tokenId Agent to clone\\r\\n    /// @param proofs Clone proofs\\r\\n    /// @return newTokenId The cloned agent token ID\\r\\n    function clone(\\r\\n        address to,\\r\\n        uint256 tokenId,\\r\\n        bytes[] calldata proofs\\r\\n    ) external payable override returns (uint256 newTokenId) {\\r\\n        require(to != address(0), \\\"Cannot clone to zero address\\\");\\r\\n        require(agents[tokenId].owner == msg.sender, \\\"Not agent owner\\\");\\r\\n        \\r\\n        // Verify clone proofs (same as transfer proofs)\\r\\n        TransferValidityProofOutput[] memory proofOutputs = verifier.verifyTransferValidity(proofs);\\r\\n        \\r\\n        bytes32[] memory newDataHashes = new bytes32[](proofOutputs.length);\\r\\n        for (uint256 i = 0; i < proofOutputs.length; i++) {\\r\\n            require(proofOutputs[i].isValid, \\\"Invalid clone proof\\\");\\r\\n            newDataHashes[i] = proofOutputs[i].newDataHash;\\r\\n        }\\r\\n        \\r\\n        // Create cloned agent\\r\\n        newTokenId = nextTokenId++;\\r\\n        agents[newTokenId] = DreamAgent({\\r\\n            owner: to,\\r\\n            createdAt: block.timestamp,\\r\\n            lastUpdated: block.timestamp,\\r\\n            dataDescriptions: agents[tokenId].dataDescriptions,\\r\\n            dataHashes: newDataHashes,\\r\\n            authorizedUsers: new address[](0),\\r\\n            intelligenceLevel: agents[tokenId].intelligenceLevel, // Same intelligence!\\r\\n            dreamCount: 0 // Reset dream count for new owner\\r\\n        });\\r\\n        \\r\\n        totalAgents++;\\r\\n        \\r\\n        emit Cloned(tokenId, newTokenId, msg.sender, to);\\r\\n        emit Minted(newTokenId, msg.sender, to, newDataHashes, agents[tokenId].dataDescriptions);\\r\\n        \\r\\n        return newTokenId;\\r\\n    }\\r\\n    \\r\\n    /// @notice Authorize user to use agent (but not own)\\r\\n    /// @param tokenId Agent to authorize\\r\\n    /// @param user User to authorize\\r\\n    function authorizeUsage(uint256 tokenId, address user) external override {\\r\\n        require(agents[tokenId].owner == msg.sender, \\\"Not agent owner\\\");\\r\\n        require(user != address(0), \\\"Cannot authorize zero address\\\");\\r\\n        \\r\\n        agents[tokenId].authorizedUsers.push(user);\\r\\n        \\r\\n        emit AuthorizedUsage(tokenId, user);\\r\\n    }\\r\\n    \\r\\n    // View functions\\r\\n    function ownerOf(uint256 tokenId) external view override returns (address) {\\r\\n        return agents[tokenId].owner;\\r\\n    }\\r\\n    \\r\\n    function authorizedUsersOf(uint256 tokenId) external view override returns (address[] memory) {\\r\\n        return agents[tokenId].authorizedUsers;\\r\\n    }\\r\\n    \\r\\n    function getAgentInfo(uint256 tokenId) external view returns (\\r\\n        address owner,\\r\\n        uint256 intelligenceLevel,\\r\\n        uint256 dreamCount,\\r\\n        uint256 lastUpdated,\\r\\n        string[] memory dataDescriptions\\r\\n    ) {\\r\\n        DreamAgent memory agent = agents[tokenId];\\r\\n        return (\\r\\n            agent.owner,\\r\\n            agent.intelligenceLevel,\\r\\n            agent.dreamCount,\\r\\n            agent.lastUpdated,\\r\\n            agent.dataDescriptions\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    // Not implemented for testing (would require complex logic)\\r\\n    function transferPublic(address, uint256) external pure override {\\r\\n        revert(\\\"Public transfer not implemented\\\");\\r\\n    }\\r\\n    \\r\\n    function clonePublic(address, uint256) external payable override returns (uint256) {\\r\\n        revert(\\\"Public clone not implemented\\\");\\r\\n    }\\r\\n} \",\"keccak256\":\"0xad34f135c26fe325ab43c9500023956e7ecbc5875d1ae037777d0d8ca2998037\",\"license\":\"MIT\"},\"contracts/interfaces/IERC7857.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"./IERC7857DataVerifier.sol\\\";\\r\\n\\r\\ninterface IERC7857 {\\r\\n    /// @dev This emits when a new functional NFT is minted\\r\\n    event Minted(\\r\\n        uint256 indexed _tokenId,\\r\\n        address indexed _creator,\\r\\n        address indexed _owner,\\r\\n        bytes32[] _dataHashes,\\r\\n        string[] _dataDescriptions\\r\\n    );\\r\\n\\r\\n    /// @dev This emits when a user is authorized to use the data\\r\\n    event AuthorizedUsage(uint256 indexed _tokenId, address indexed _user);\\r\\n\\r\\n    /// @dev This emits when data is transferred with ownership\\r\\n    event Transferred(\\r\\n        uint256 _tokenId,\\r\\n        address indexed _from,\\r\\n        address indexed _to\\r\\n    );\\r\\n\\r\\n    /// @dev This emits when data is cloned\\r\\n    event Cloned(\\r\\n        uint256 indexed _tokenId,\\r\\n        uint256 indexed _newTokenId,\\r\\n        address _from,\\r\\n        address _to\\r\\n    );\\r\\n\\r\\n    /// @dev This emits when a sealed key is published\\r\\n    event PublishedSealedKey(\\r\\n        address indexed _to,\\r\\n        uint256 indexed _tokenId,\\r\\n        bytes16[] _sealedKeys\\r\\n    );\\r\\n\\r\\n    /// @notice The verifier interface that this NFT uses\\r\\n    /// @return The address of the verifier contract\\r\\n    function verifier() external view returns (IERC7857DataVerifier);\\r\\n\\r\\n    /// @notice Mint new functional NFT with functional data ownership proof\\r\\n    /// @param _proofs Proof of data ownership\\r\\n    /// @param _dataDescriptions Descriptions of the data\\r\\n    /// @return _tokenId The ID of the newly minted token\\r\\n    /// @param _to The address to mint the token for, if _to is not set, the token will be minted for the caller\\r\\n    function mint(\\r\\n        bytes[] calldata _proofs,\\r\\n        string[] calldata _dataDescriptions,\\r\\n        address _to\\r\\n    ) external payable returns (uint256 _tokenId);\\r\\n\\r\\n    /// @notice Transfer data with ownership\\r\\n    /// @param _to Address to transfer data to\\r\\n    /// @param _tokenId The token to transfer data for\\r\\n    /// @param _proofs Proofs of data available for _to\\r\\n    function transfer(\\r\\n        address _to,\\r\\n        uint256 _tokenId,\\r\\n        bytes[] calldata _proofs\\r\\n    ) external;\\r\\n\\r\\n    /// @notice Clone data\\r\\n    /// @param _to Address to clone data to\\r\\n    /// @param _tokenId The token to clone data for\\r\\n    /// @param _proofs Proofs of data available for _to\\r\\n    /// @return _newTokenId The ID of the newly cloned token\\r\\n    function clone(\\r\\n        address _to,\\r\\n        uint256 _tokenId,\\r\\n        bytes[] calldata _proofs\\r\\n    ) external payable returns (uint256 _newTokenId);\\r\\n\\r\\n    /// @notice Transfer public data with ownership\\r\\n    /// @param _to Address to transfer data to\\r\\n    /// @param _tokenId The token to transfer data for\\r\\n    function transferPublic(address _to, uint256 _tokenId) external;\\r\\n\\r\\n    /// @notice Clone public data\\r\\n    /// @param _to Address to clone data to\\r\\n    /// @param _tokenId The token to clone data for\\r\\n    /// @return _newTokenId The ID of the newly cloned token\\r\\n    function clonePublic(\\r\\n        address _to,\\r\\n        uint256 _tokenId\\r\\n    ) external payable returns (uint256 _newTokenId);\\r\\n\\r\\n    /// @notice Add authorized user to group\\r\\n    /// @param _tokenId The token to add to group\\r\\n    function authorizeUsage(uint256 _tokenId, address _user) external;\\r\\n\\r\\n    /// @notice Get token owner\\r\\n    /// @param _tokenId The token identifier\\r\\n    /// @return The current owner of the token\\r\\n    function ownerOf(uint256 _tokenId) external view returns (address);\\r\\n\\r\\n    /// @notice Get the authorized users of a token\\r\\n    /// @param _tokenId The token identifier\\r\\n    /// @return The current authorized users of the token\\r\\n    function authorizedUsersOf(\\r\\n        uint256 _tokenId\\r\\n    ) external view returns (address[] memory);\\r\\n} \",\"keccak256\":\"0xea172e788f7b943f5c2dfd356b968a99fc77c1da89e6cdf3d2f0065b77baf185\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IERC7857DataVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nstruct PreimageProofOutput {\\r\\n    bytes32 dataHash;\\r\\n    bool isValid;\\r\\n}\\r\\n\\r\\nstruct TransferValidityProofOutput {\\r\\n    bytes32 oldDataHash;\\r\\n    bytes32 newDataHash;\\r\\n    bytes pubKey;\\r\\n    bytes16 sealedKey;\\r\\n    bool isValid;\\r\\n}\\r\\n\\r\\ninterface IERC7857DataVerifier {\\r\\n    /// @notice Verify preimage of data\\r\\n    /// @param proofs Proof of data ownership\\r\\n    /// @return Output of the preimage proof verification\\r\\n    function verifyPreimage(\\r\\n        bytes[] calldata proofs\\r\\n    ) external view returns (PreimageProofOutput[] memory);\\r\\n\\r\\n    /// @notice Verify data transfer validity\\r\\n    /// @param proofs Proof of data transfer validity\\r\\n    /// @return Output of the transfer validity proof verification\\r\\n    function verifyTransferValidity(\\r\\n        bytes[] calldata proofs\\r\\n    ) external view returns (TransferValidityProofOutput[] memory);\\r\\n} \",\"keccak256\":\"0x7612ea6cfa293aa73e2ca4b2c449d2faa5651d737386a9e15862a64fa2333242\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60018055600060025560e0604052600f60a09081526e111c99585b481059d95b9d08139195608a1b60c052600390620000399082620001a8565b50604080518082019091526005815264445245414d60d81b6020820152600490620000659082620001a8565b503480156200007357600080fd5b506040516200297a3803806200297a833981016040819052620000969162000274565b6001600160a01b038116620000f15760405162461bcd60e51b815260206004820152601f60248201527f56657269666965722063616e6e6f74206265207a65726f206164647265737300604482015260640160405180910390fd5b6001600160a01b0316608052620002a6565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200012e57607f821691505b6020821081036200014f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a357600081815260208120601f850160051c810160208610156200017e5750805b601f850160051c820191505b818110156200019f578281556001016200018a565b5050505b505050565b81516001600160401b03811115620001c457620001c462000103565b620001dc81620001d5845462000119565b8462000155565b602080601f831160018114620002145760008415620001fb5750858301515b600019600386901b1c1916600185901b1785556200019f565b600085815260208120601f198616915b82811015620002455788860151825594840194600190910190840162000224565b5085821015620002645787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200028757600080fd5b81516001600160a01b03811681146200029f57600080fd5b9392505050565b60805161269c620002de600039600081816101930152818161079501528181610bab0152818161111601526114bf015261269c6000f3fe6080604052600436106100f35760003560e01c80637289fdd61161008a578063a501445211610059578063a50144521461032a578063c50537121461033d578063dfdad7de14610353578063fa83d14e1461037357600080fd5b80637289fdd6146102cb57806375794a3c146102ec57806395d89b411461030257806398a9ce2e1461031757600080fd5b80633481e7bf116100c65780633481e7bf146101cd578063389f8754146101ef578063513856c81461020f5780636352211e1461029557600080fd5b806306fdde03146100f857806319a6a6e9146101235780631aeb542f146101545780632b7ac3f314610181575b600080fd5b34801561010457600080fd5b5061010d610393565b60405161011a9190611b0d565b60405180910390f35b34801561012f57600080fd5b5061014361013e366004611b27565b610421565b60405161011a959493929190611b40565b34801561016057600080fd5b5061017461016f366004611b27565b610634565b60405161011a9190611bc7565b34801561018d57600080fd5b506101b57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011a565b3480156101d957600080fd5b506101ed6101e8366004611c30565b6106a1565b005b3480156101fb57600080fd5b506101ed61020a366004611ca5565b6106ee565b34801561021b57600080fd5b5061026361022a366004611b27565b600060208190529081526040902080546001820154600283015460068401546007909401546001600160a01b0390931693919290919085565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a00161011a565b3480156102a157600080fd5b506101b56102b0366004611b27565b6000908152602081905260409020546001600160a01b031690565b6102de6102d9366004611cf0565b610b03565b60405190815260200161011a565b3480156102f857600080fd5b506102de60015481565b34801561030e57600080fd5b5061010d610fed565b6102de610325366004611c30565b610ffa565b6102de610338366004611d49565b611045565b34801561034957600080fd5b506102de60025481565b34801561035f57600080fd5b506101ed61036e366004611cf0565b611419565b34801561037f57600080fd5b506101ed61038e366004611dc9565b611863565b600380546103a090611df5565b80601f01602080910402602001604051908101604052809291908181526020018280546103cc90611df5565b80156104195780601f106103ee57610100808354040283529160200191610419565b820191906000526020600020905b8154815290600101906020018083116103fc57829003601f168201915b505050505081565b60008181526020818152604080832081516101008101835281546001600160a01b03168152600182015481850152600282015481840152600382018054845181870281018701909552808552869586958695606095879590949193858801939290879084015b828210156105335783829060005260206000200180546104a690611df5565b80601f01602080910402602001604051908101604052809291908181526020018280546104d290611df5565b801561051f5780601f106104f45761010080835404028352916020019161051f565b820191906000526020600020905b81548152906001019060200180831161050257829003601f168201915b505050505081526020019060010190610487565b5050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561058a57602002820191906000526020600020905b815481526020019060010190808311610576575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156105ec57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105ce575b505050918352505060068201546020820152600790910154604091820152815160c083015160e084015192840151606090940151919b909a5091985091965090945092505050565b6000818152602081815260409182902060050180548351818402810184019094528084526060939283018282801561069557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610677575b50505050509050919050565b60405162461bcd60e51b815260206004820152601f60248201527f5075626c6963207472616e73666572206e6f7420696d706c656d656e7465640060448201526064015b60405180910390fd5b6000838152602081905260409020546001600160a01b031633146107245760405162461bcd60e51b81526004016106e590611e2f565b600083815260208190526040902060040154811461077b5760405162461bcd60e51b81526020600482015260146024820152730a0e4dedecc40c6deeadce840dad2e6dac2e8c6d60631b60448201526064016106e5565b60405163c2a93e3760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2a93e37906107cc9086908690600401611ec6565b600060405180830381865afa1580156107e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108119190810190611fef565b6000858152602081815260408083206004018054825181850281018501909352808352949550929390929183018282801561086b57602002820191906000526020600020905b815481526020019060010190808311610857575b50505050509050600082516001600160401b0381111561088d5761088d611f2c565b6040519080825280602002602001820160405280156108b6578160200160208202803683370190505b50905060005b835181101561096c578381815181106108d7576108d76120b1565b60200260200101516020015161091f5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016106e5565b838181518110610931576109316120b1565b60200260200101516000015182828151811061094f5761094f6120b1565b602090810291909101015280610964816120c7565b9150506108bc565b5060008681526020818152604090912082516109909260049092019184019061195c565b5060008681526020819052604081204260028201556007018054916109b4836120c7565b90915550506000868152602081905260409020600701546109d7906005906120ee565b600003610a4f5760008681526020819052604081206006018054918291906109fe836120c7565b9091555050600087815260208181526040918290206006015482518481529182015288917f06bbb7cb56b5f3845ce5ad015d25cbf87ed1c37c635e2082acb2610598f15cc7910160405180910390a2505b857f51fa73895ca2bd4c7f525775384b199b6047f069e662b82aa9e1b0998b9c29758383604051610a8192919061214b565b60405180910390a2857f871f9739b79e9efd6285318758001f00502185ff0d254a080922cd80580c3e0282600081518110610abe57610abe6120b1565b60200260200101516000808a815260200190815260200160002060060154604051610af3929190918252602082015260400190565b60405180910390a2505050505050565b60006001600160a01b038516610b5b5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f7420636c6f6e6520746f207a65726f20616464726573730000000060448201526064016106e5565b6000848152602081905260409020546001600160a01b03163314610b915760405162461bcd60e51b81526004016106e590611e2f565b6040516349e176d360e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393c2eda690610be29087908790600401611ec6565b600060405180830381865afa158015610bff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c2791908101906121b8565b9050600081516001600160401b03811115610c4457610c44611f2c565b604051908082528060200260200182016040528015610c6d578160200160208202803683370190505b50905060005b8251811015610d2957828181518110610c8e57610c8e6120b1565b602002602001015160800151610cdc5760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21031b637b73290383937b7b360691b60448201526064016106e5565b828181518110610cee57610cee6120b1565b602002602001015160200151828281518110610d0c57610d0c6120b1565b602090810291909101015280610d21816120c7565b915050610c73565b5060018054906000610d3a836120c7565b919050559250604051806101000160405280886001600160a01b03168152602001428152602001428152602001600080898152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b82821015610e48578382906000526020600020018054610dbb90611df5565b80601f0160208091040260200160405190810160405280929190818152602001828054610de790611df5565b8015610e345780601f10610e0957610100808354040283529160200191610e34565b820191906000526020600020905b815481529060010190602001808311610e1757829003601f168201915b505050505081526020019060010190610d9c565b505050908252506020808201849052604080516000808252928101825292019190508152600088815260208181526040808320600601548285015292830182905286825281815290829020835181546001600160a01b0319166001600160a01b0390911617815583820151600182015591830151600283015560608301518051610ed892600385019201906119a7565b5060808201518051610ef491600484019160209091019061195c565b5060a08201518051610f109160058401916020909101906119f9565b5060c0820151600682015560e09091015160079091015560028054906000610f37836120c7565b9091555050604080513381526001600160a01b0389166020820152849188917f40b442ee2bb535802063305b95f127b5101e5fce261a5dec9379683eaaad8cdb910160405180910390a3866001600160a01b0316336001600160a01b0316847f531bd8ca2b17505aaa50d843fabe2dfd9a3bb9e20c511d2288b24bd484861b02846000808c8152602001908152602001600020600301604051610fdb92919061230b565b60405180910390a45050949350505050565b600480546103a090611df5565b60405162461bcd60e51b815260206004820152601c60248201527f5075626c696320636c6f6e65206e6f7420696d706c656d656e7465640000000060448201526000906064016106e5565b60006001600160a01b03821661109d5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f2061646472657373000000000060448201526064016106e5565b8285146110fc5760405162461bcd60e51b815260206004820152602760248201527f4465736372697074696f6e7320616e642070726f6f6673206c656e677468206d6044820152660d2e6dac2e8c6d60cb1b60648201526084016106e5565b60405163c2a93e3760e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2a93e379061114d908a908a90600401611ec6565b600060405180830381865afa15801561116a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111929190810190611fef565b9050600081516001600160401b038111156111af576111af611f2c565b6040519080825280602002602001820160405280156111d8578160200160208202803683370190505b50905060005b825181101561128e578281815181106111f9576111f96120b1565b6020026020010151602001516112415760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016106e5565b828181518110611253576112536120b1565b602002602001015160000151828281518110611271576112716120b1565b602090810291909101015280611286816120c7565b9150506111de565b506001805490600061129f836120c7565b919050559250604051806101000160405280856001600160a01b031681526020014281526020014281526020018787906112d991906123ed565b8152602080820184905260408051600080825281840183528285019190915260016060808601829052608090950182905288825281845290829020855181546001600160a01b0319166001600160a01b03909116178155858401519181019190915590840151600282015591830151805161135a92600385019201906119a7565b506080820151805161137691600484019160209091019061195c565b5060a082015180516113929160058401916020909101906119f9565b5060c0820151600682015560e090910151600790910155600280549060006113b9836120c7565b9190505550836001600160a01b0316336001600160a01b0316847f531bd8ca2b17505aaa50d843fabe2dfd9a3bb9e20c511d2288b24bd484861b02848a8a6040516114069392919061249c565b60405180910390a4505095945050505050565b6001600160a01b03841661146f5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f20616464726573730060448201526064016106e5565b6000838152602081905260409020546001600160a01b031633146114a55760405162461bcd60e51b81526004016106e590611e2f565b6040516349e176d360e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393c2eda6906114f69086908690600401611ec6565b600060405180830381865afa158015611513573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261153b91908101906121b8565b905060005b815181101561164c5781818151811061155b5761155b6120b1565b6020026020010151608001516115ac5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103a3930b739b332b910383937b7b360511b60448201526064016106e5565b60008581526020819052604090206004018054829081106115cf576115cf6120b1565b90600052602060002001548282815181106115ec576115ec6120b1565b6020026020010151600001511461163a5760405162461bcd60e51b8152602060048201526012602482015271088c2e8c240d0c2e6d040dad2e6dac2e8c6d60731b60448201526064016106e5565b80611644816120c7565b915050611540565b50600081516001600160401b0381111561166857611668611f2c565b604051908082528060200260200182016040528015611691578160200160208202803683370190505b509050600082516001600160401b038111156116af576116af611f2c565b6040519080825280602002602001820160405280156116d8578160200160208202803683370190505b50905060005b835181101561177e578381815181106116f9576116f96120b1565b602002602001015160200151838281518110611717576117176120b1565b602002602001018181525050838181518110611735576117356120b1565b602002602001015160600151828281518110611753576117536120b1565b6001600160801b03199092166020928302919091019091015280611776816120c7565b9150506116de565b5060008681526020818152604090912080546001600160a01b038a81166001600160a01b0319831617835585519116926117bf92600401919086019061195c565b50600087815260208181526040918290204260029091015590518881526001600160a01b03808b1692908416917f0ea8df787dde63a7bdc34d17097adf25749a3521f660e92dabdff8d6ee91d18a910160405180910390a386886001600160a01b03167f156aabbd131f533640c54a2c9d227cce945fa46b6e45df7a473d76203233b9b5846040516118519190612516565b60405180910390a35050505050505050565b6000828152602081905260409020546001600160a01b031633146118995760405162461bcd60e51b81526004016106e590611e2f565b6001600160a01b0381166118ef5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420617574686f72697a65207a65726f206164647265737300000060448201526064016106e5565b600082815260208181526040808320600501805460018101825590845291832090910180546001600160a01b0319166001600160a01b0385169081179091559051909184917f32a4407627195670dd4c989ee38441e11ab643ccd4759c25d9c0bd6a635039db9190a35050565b828054828255906000526020600020908101928215611997579160200282015b8281111561199757825182559160200191906001019061197c565b506119a3929150611a4e565b5090565b8280548282559060005260206000209081019282156119ed579160200282015b828111156119ed57825182906119dd90826125a7565b50916020019190600101906119c7565b506119a3929150611a63565b828054828255906000526020600020908101928215611997579160200282015b8281111561199757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611a19565b5b808211156119a35760008155600101611a4f565b808211156119a3576000611a778282611a80565b50600101611a63565b508054611a8c90611df5565b6000825580601f10611a9c575050565b601f016020900490600052602060002090810190611aba9190611a4e565b50565b60005b83811015611ad8578181015183820152602001611ac0565b50506000910152565b60008151808452611af9816020860160208601611abd565b601f01601f19169290920160200192915050565b602081526000611b206020830184611ae1565b9392505050565b600060208284031215611b3957600080fd5b5035919050565b600060a0820160018060a01b03881683526020878185015286604085015285606085015260a0608085015281855180845260c08601915060c08160051b870101935082870160005b82811015611bb65760bf19888703018452611ba4868351611ae1565b95509284019290840190600101611b88565b50939b9a5050505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611c085783516001600160a01b031683529284019291840191600101611be3565b50909695505050505050565b80356001600160a01b0381168114611c2b57600080fd5b919050565b60008060408385031215611c4357600080fd5b611c4c83611c14565b946020939093013593505050565b60008083601f840112611c6c57600080fd5b5081356001600160401b03811115611c8357600080fd5b6020830191508360208260051b8501011115611c9e57600080fd5b9250929050565b600080600060408486031215611cba57600080fd5b8335925060208401356001600160401b03811115611cd757600080fd5b611ce386828701611c5a565b9497909650939450505050565b60008060008060608587031215611d0657600080fd5b611d0f85611c14565b93506020850135925060408501356001600160401b03811115611d3157600080fd5b611d3d87828801611c5a565b95989497509550505050565b600080600080600060608688031215611d6157600080fd5b85356001600160401b0380821115611d7857600080fd5b611d8489838a01611c5a565b90975095506020880135915080821115611d9d57600080fd5b50611daa88828901611c5a565b9094509250611dbd905060408701611c14565b90509295509295909350565b60008060408385031215611ddc57600080fd5b82359150611dec60208401611c14565b90509250929050565b600181811c90821680611e0957607f821691505b602082108103611e2957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600f908201526e2737ba1030b3b2b73a1037bbb732b960891b604082015260600190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e19843603018112611e9857600080fd5b83016020810192503590506001600160401b03811115611eb757600080fd5b803603821315611c9e57600080fd5b60208082528181018390526000906040600585901b8401810190840186845b87811015611f1f57868403603f19018352611f00828a611e81565b611f0b868284611e58565b955050509184019190840190600101611ee5565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611f6457611f64611f2c565b60405290565b60405160a081016001600160401b0381118282101715611f6457611f64611f2c565b604051601f8201601f191681016001600160401b0381118282101715611fb457611fb4611f2c565b604052919050565b60006001600160401b03821115611fd557611fd5611f2c565b5060051b60200190565b80518015158114611c2b57600080fd5b6000602080838503121561200257600080fd5b82516001600160401b0381111561201857600080fd5b8301601f8101851361202957600080fd5b805161203c61203782611fbc565b611f8c565b81815260069190911b8201830190838101908783111561205b57600080fd5b928401925b828410156120a657604084890312156120795760008081fd5b612081611f42565b84518152612090868601611fdf565b8187015282526040939093019290840190612060565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016120e757634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261210b57634e487b7160e01b600052601260045260246000fd5b500690565b600081518084526020808501945080840160005b8381101561214057815187529582019590820190600101612124565b509495945050505050565b60408152600061215e6040830185612110565b82810360208401526121708185612110565b95945050505050565b60006001600160401b0382111561219257612192611f2c565b50601f01601f191660200190565b80516001600160801b031981168114611c2b57600080fd5b600060208083850312156121cb57600080fd5b82516001600160401b03808211156121e257600080fd5b818501915085601f8301126121f657600080fd5b815161220461203782611fbc565b81815260059190911b8301840190848101908883111561222357600080fd5b8585015b838110156122fe5780518581111561223e57600080fd5b860160a0818c03601f1901121561225457600080fd5b61225c611f6a565b8882015181526040808301518a83015260608301518881111561227f5760008081fd5b8301603f81018e136122915760008081fd5b8a8101516122a161203782612179565b8181528f848385010111156122b65760008081fd5b6122c5828e8301868601611abd565b80848601525050505060806122db8184016121a0565b60608301526122ec60a08401611fdf565b90820152845250918601918601612227565b5098975050505050505050565b60408152600061231e6040830185612110565b602083820381850152818554808452828401915060058382821b8601016000898152858120815b858110156123dc57601f1989850301875282825461236281611df5565b8087526001828116801561237d5760018114612396576123c5565b60ff198416898e01528215158a1b89018d0194506123c5565b8688528c8820885b848110156123bd5781548f828d01015283820191508e8101905061239e565b8a018e019550505b50998b019992965050509190910190600101612345565b50919b9a5050505050505050505050565b60006123fb61203784611fbc565b80848252602080830192508560051b85013681111561241957600080fd5b855b818110156124905780356001600160401b0381111561243a5760008081fd5b870136601f82011261244c5760008081fd5b803561245a61203782612179565b818152368683850101111561246f5760008081fd5b8186840187830137600091810186019190915286525093820193820161241b565b50919695505050505050565b6040815260006124af6040830186612110565b602083820381850152818583528183019050818660051b8401018760005b8881101561250757858303601f190184526124e8828b611e81565b6124f3858284611e58565b9587019594505050908401906001016124cd565b50909998505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611c085783516001600160801b03191683529284019291840191600101612532565b601f8211156125a257600081815260208120601f850160051c8101602086101561257f5750805b601f850160051c820191505b8181101561259e5782815560010161258b565b5050505b505050565b81516001600160401b038111156125c0576125c0611f2c565b6125d4816125ce8454611df5565b84612558565b602080601f83116001811461260957600084156125f15750858301515b600019600386901b1c1916600185901b17855561259e565b600085815260208120601f198616915b8281101561263857888601518255948401946001909101908401612619565b50858210156126565787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122028051380e57c84b138eb611f46fa7919ff1ec177c6e37d8f263cd4ec3eeea2a364736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "Simplified version for Dreamscape testing, based on ERC-7857 standard",
    "events": {
      "AuthorizedUsage(uint256,address)": {
        "details": "This emits when a user is authorized to use the data"
      },
      "Cloned(uint256,uint256,address,address)": {
        "details": "This emits when data is cloned"
      },
      "Minted(uint256,address,address,bytes32[],string[])": {
        "details": "This emits when a new functional NFT is minted"
      },
      "PublishedSealedKey(address,uint256,bytes16[])": {
        "details": "This emits when a sealed key is published"
      },
      "Transferred(uint256,address,address)": {
        "details": "This emits when data is transferred with ownership"
      }
    },
    "kind": "dev",
    "methods": {
      "authorizeUsage(uint256,address)": {
        "params": {
          "tokenId": "Agent to authorize",
          "user": "User to authorize"
        }
      },
      "clone(address,uint256,bytes[])": {
        "params": {
          "proofs": "Clone proofs",
          "to": "Address to clone agent for",
          "tokenId": "Agent to clone"
        },
        "returns": {
          "newTokenId": "The cloned agent token ID"
        }
      },
      "mint(bytes[],string[],address)": {
        "params": {
          "descriptions": "Data type descriptions",
          "proofs": "Ownership proofs for initial data",
          "to": "Address to mint agent for"
        },
        "returns": {
          "tokenId": "The newly minted agent token ID"
        }
      },
      "transfer(address,uint256,bytes[])": {
        "params": {
          "proofs": "Transfer validity proofs",
          "to": "New owner address",
          "tokenId": "Agent to transfer"
        }
      },
      "update(uint256,bytes[])": {
        "params": {
          "proofs": "New data proofs",
          "tokenId": "Agent to update"
        }
      }
    },
    "stateVariables": {
      "verifier": {
        "return": "The address of the verifier contract",
        "returns": {
          "_0": "The address of the verifier contract"
        }
      }
    },
    "title": "DreamAgentNFT - Intelligent NFT for Dream Analysis Agents",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "authorizeUsage(uint256,address)": {
        "notice": "Authorize user to use agent (but not own)"
      },
      "clone(address,uint256,bytes[])": {
        "notice": "Clone agent (create copy with same intelligence)"
      },
      "mint(bytes[],string[],address)": {
        "notice": "Mint a new dream agent for a user"
      },
      "transfer(address,uint256,bytes[])": {
        "notice": "Transfer agent with intelligence to new owner"
      },
      "update(uint256,bytes[])": {
        "notice": "Update agent data with new dream information"
      },
      "verifier()": {
        "notice": "The verifier interface that this NFT uses"
      }
    },
    "notice": "Manages dream agents with encrypted intelligence stored in 0G Storage",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 40,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "agents",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(DreamAgent)35_storage)"
      },
      {
        "astId": 43,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "nextTokenId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 46,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "totalAgents",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 49,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 52,
        "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
        "label": "symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint256,t_struct(DreamAgent)35_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DreamAgentNFT.DreamAgent)",
        "numberOfBytes": "32",
        "value": "t_struct(DreamAgent)35_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DreamAgent)35_storage": {
        "encoding": "inplace",
        "label": "struct DreamAgentNFT.DreamAgent",
        "members": [
          {
            "astId": 17,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 19,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "createdAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "lastUpdated",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 24,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "dataDescriptions",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 27,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "dataHashes",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 30,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "authorizedUsers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 32,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "intelligenceLevel",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 34,
            "contract": "contracts/DreamAgentNFT.sol:DreamAgentNFT",
            "label": "dreamCount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}