import { ContractFactory, ContractTransactionResponse } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../common.js';
import type { LedgerManager, LedgerManagerInterface } from '../LedgerManager.js';
type LedgerManagerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class LedgerManager__factory extends ContractFactory {
    constructor(...args: LedgerManagerConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<LedgerManager & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): LedgerManager__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61239a806100826000396000f3fe6080604052600436106100f75760003560e01c806372adc0d91161008a578063dd8a411811610059578063dd8a41181461028d578063e5d9fdab146102ad578063f2fde38b146102cd578063f7cd6af9146102ed57600080fd5b806372adc0d91461021f5780638d0d8cb6146102475780638da5cb5b1461024f578063c0c53b8b1461026d57600080fd5b806331404a19116100c657806331404a191461019d578063382e1112146101bd578063410b3815146101f5578063715018a61461020a57600080fd5b8063158ef93e146101035780631665c79b14610139578063278ecde11461015b5780632ba43b821461017d57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5060005461012490600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b34801561014557600080fd5b5061014e61031a565b6040516101309190611c75565b34801561016757600080fd5b5061017b610176366004611cd7565b61057d565b005b34801561018957600080fd5b5061017b610198366004611dc3565b61068c565b3480156101a957600080fd5b5061017b6101b8366004611e1a565b610a62565b3480156101c957600080fd5b506003546101dd906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b34801561020157600080fd5b5061017b610c7e565b34801561021657600080fd5b5061017b610ef4565b61023261022d366004611ee9565b610f06565b60408051928352602083019190915201610130565b61017b610fc4565b34801561025b57600080fd5b506000546001600160a01b03166101dd565b34801561027957600080fd5b5061017b610288366004611f32565b611074565b34801561029957600080fd5b5061017b6102a8366004611f75565b61113e565b3480156102b957600080fd5b506002546101dd906001600160a01b031681565b3480156102d957600080fd5b5061017b6102e8366004611f9f565b61124e565b3480156102f957600080fd5b5061030d610308366004611f9f565b6112c7565b6040516101309190611fba565b60606000610326611496565b90508067ffffffffffffffff81111561034157610341611d0c565b60405190808252806020026020018201604052801561037a57816020015b610367611a26565b81526020019060019003908161035f5790505b50915060005b8181101561057857610391816114a7565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b8154815260200190600101908083116103d6575050505050815260200160058201805461040290611fcd565b80601f016020809104026020016040519081016040528092919081815260200182805461042e90611fcd565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156104dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104bf575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561053f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610521575b50505050508152505083828151811061055a5761055a612007565b6020026020010181905250808061057090612033565b915050610380565b505090565b336000610589826114ca565b60008181526007602052604090205490915060ff16156105c45760405162461bcd60e51b81526004016105bb9061204c565b60405180910390fd5b6000818152600760205260408120805460ff191660011790556105e6336114fe565b9050838160010154101561060f5760405163112fed8b60e31b81523360048201526024016105bb565b838160010160008282546106239190612083565b925050819055508381600201600082825461063e9190612083565b9091555050604051339085156108fc029086906000818181858888f19350505050158015610670573d6000803e3d6000fd5b50506000908152600760205260409020805460ff191690555050565b610694611551565b3360006106a0826114ca565b60008181526007602052604090205490915060ff16156106d25760405162461bcd60e51b81526004016105bb9061204c565b6000818152600760205260408120805460ff191660011790556106f4336114fe565b90506000806000610704886115aa565b60405163147500e360e01b81523360048201526001600160a01b038d81166024830152939650919450925088916060919085169063147500e390604401602060405180830381865afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190612096565b1561086e57604051631320b9eb60e11b81523360048201526001600160a01b038c811660248301526000919086169063264173d690604401602060405180830381865afa1580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb91906120bf565b905060006108098b836116ab565b90506108158185612083565b6040513360248201526001600160a01b038f1660448201526064810183905290945060840160408051601f198184030181529190526020810180516001600160e01b031663745e87f760e01b1790529250610922915050565b826000036108d157338b87600301886005016040516024016108939493929190612155565b60408051601f198184030181529190526020810180516001600160e01b03166312f0ebfd60e21b17905290506108cc600687018c6116c5565b610922565b338b876005016040516024016108e9939291906121b7565b60408051601f198184030181529190526020810180516001600160e01b031663e50688f960e01b1790529050610922600787018c6116c5565b818660010154101561096d5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016105bb565b818660010160008282546109819190612083565b925050819055506000856001600160a01b031683836040516109a391906121e3565b60006040518083038185875af1925050503d80600081146109e0576040519150601f19603f3d011682016040523d82523d6000602084013e6109e5565b606091505b5050905080610a365760405162461bcd60e51b815260206004820152601d60248201527f43616c6c20746f206368696c6420636f6e7472616374206661696c656400000060448201526064016105bb565b505050600094855250506007602052505060409020805460ff1916905550610a5d60018055565b505050565b610a6a611551565b336000610a76826114ca565b60008181526007602052604090205490915060ff1615610aa85760405162461bcd60e51b81526004016105bb9061204c565b6000818152600760205260408120805460ff19166001179055610aca846115aa565b509150506000610ad9336114fe565b90506000805b8751811015610c3d576000846001600160a01b0316634e3c4f22338b8581518110610b0c57610b0c612007565b60200260200101516040518363ffffffff1660e01b8152600401610b469291906001600160a01b0392831681529116602082015260400190565b6060604051808303816000875af1158015610b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8991906121ff565b505090508083610b99919061222d565b9250846001600160a01b0316636c79158d338b8581518110610bbd57610bbd612007565b60200260200101516040518363ffffffff1660e01b8152600401610bf79291906001600160a01b0392831681529116602082015260400190565b600060405180830381600087803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b50505050508080610c3590612033565b915050610adf565b5080826001016000828254610c52919061222d565b90915550505060009283525050600760205260409020805460ff1916905550610c7a60018055565b5050565b610c86611551565b336000610c92826114ca565b60008181526007602052604090205490915060ff1615610cc45760405162461bcd60e51b81526004016105bb9061204c565b6000818152600760205260408120805460ff19166001179055610ce6336114ca565b90506000610cf3336114fe565b905060005b6006820154811015610da9576009546006830180546001600160a01b0390921691639721672591339185908110610d3157610d31612007565b60009182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b158015610d8557600080fd5b505af1925050508015610d96575060015b5080610da181612033565b915050610cf8565b5060005b6007820154811015610e5e576008546007830180546001600160a01b0390921691639721672591339185908110610de657610de6612007565b60009182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b158015610e3a57600080fd5b505af1925050508015610e4b575060015b5080610e5681612033565b915050610dad565b50610e6a600483611753565b50600082815260066020526040812080546001600160a01b03191681556001810182905560028101829055600381018290556004810182905590610eb2600583016000611a72565b610ec0600683016000611aac565b610ece600783016000611aac565b505050600091825250600760205260409020805460ff1916905550610ef260018055565b565b610efc61175f565b610ef260006117b9565b600080336000610f15826114ca565b60008181526007602052604090205490915060ff1615610f475760405162461bcd60e51b81526004016105bb9061204c565b6000818152600760205260408120805460ff19166001179055610f69336114ca565b9050610f7481611809565b15610f945760405163cde58aa160e01b81523360048201526024016105bb565b610fa1813389348a611816565b506000908152600760205260408120805460ff1916905534969095509350505050565b336000610fd0826114ca565b60008181526007602052604090205490915060ff16156110025760405162461bcd60e51b81526004016105bb9061204c565b6000818152600760205260408120805460ff19166001179055611024336114fe565b90503481600101600082825461103a919061222d565b9250508190555034816002016000828254611055919061222d565b9091555050506000908152600760205260409020805460ff1916905550565b600054600160a01b900460ff16156110d95760405162461bcd60e51b815260206004820152602260248201527f496e697469616c697a61626c653a20616c726561647920696e697469616c697a604482015261195960f21b60648201526084016105bb565b6000805460ff60a01b1916600160a01b1790556110f5816117b9565b50600280546001600160a01b039384166001600160a01b031991821681179092556003805493909416928116831790935560088054841690921790915560098054909216179055565b6003546001600160a01b031633148061116157506002546001600160a01b031633145b6111c95760405162461bcd60e51b815260206004820152603360248201527f43616c6c6572206973206e6f74207468652066696e652074756e696e67206f72604482015272081a5b99995c995b98d94818dbdb9d1c9858dd606a1b60648201526084016105bb565b60006111d4836114fe565b905081816001015482600201546111eb9190612083565b10156112305760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016105bb565b818160020160008282546112449190612083565b9091555050505050565b61125661175f565b6001600160a01b0381166112bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105bb565b6112c4816117b9565b50565b6112cf611a26565b6112d8826114fe565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b81548152602001906001019080831161131d575050505050815260200160058201805461134990611fcd565b80601f016020809104026020016040519081016040528092919081815260200182805461137590611fcd565b80156113c25780601f10611397576101008083540402835291602001916113c2565b820191906000526020600020905b8154815290600101906020018083116113a557829003601f168201915b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561142457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611406575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561148657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611468575b5050505050815250509050919050565b60006114a26004611880565b905090565b6000806114b560048461188a565b60009081526006602052604090209392505050565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b60008061150a836114ca565b905061151581611809565b61153d57604051637d2d536b60e01b81526001600160a01b03841660048201526024016105bb565b600090815260066020526040902092915050565b6002600154036115a35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105bb565b6002600155565b600080600080846040516020016115c191906121e3565b6040516020818303038152906040528051906020012090507f2a52b6261f3850b89541ab4444869004fe552e50532808641800076f8e9ec465810361161f5750506002546009546001600160a01b03918216935016905060006116a4565b7f37f0d1f2303720bab95e3c739b15188d8c19fade32eb63f80ef3d06b64daa9d281036116655750506003546008546001600160a01b03918216935016905060016116a4565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642073657276696365207479706560601b60448201526064016105bb565b9193909250565b60008183106116ba57816116bc565b825b90505b92915050565b60005b825481101561171e57816001600160a01b03168382815481106116ed576116ed612007565b6000918252602090912001546001600160a01b03160361170c57505050565b8061171681612033565b9150506116c8565b5081546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b03909216919091179055565b60006116bc8383611896565b6000546001600160a01b03163314610ef25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006116bf600483611989565b600085815260066020526040902060018101839055600280820184905581546001600160a01b0319166001600160a01b03871617825561185c9060038301908690611aca565b506005810161186b838261228e565b506118776004876119a1565b50505050505050565b60006116bf825490565b60006116bc83836119ad565b6000818152600183016020526040812054801561197f5760006118ba600183612083565b85549091506000906118ce90600190612083565b90508181146119335760008660000182815481106118ee576118ee612007565b906000526020600020015490508087600001848154811061191157611911612007565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806119445761194461234e565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506116bf565b60009150506116bf565b600081815260018301602052604081205415156116bc565b60006116bc83836119d7565b60008260000182815481106119c4576119c4612007565b9060005260206000200154905092915050565b6000818152600183016020526040812054611a1e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556116bf565b5060006116bf565b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001611a57611b08565b81526020016060815260200160608152602001606081525090565b508054611a7e90611fcd565b6000825580601f10611a8e575050565b601f0160209004906000526020600020908101906112c49190611b26565b50805460008255906000526020600020908101906112c49190611b26565b8260028101928215611af8579160200282015b82811115611af8578235825591602001919060010190611add565b50611b04929150611b26565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611b045760008155600101611b27565b60005b83811015611b56578181015183820152602001611b3e565b50506000910152565b60008151808452611b77816020860160208601611b3b565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015611bc45781516001600160a01b031687529582019590820190600101611b9f565b509495945050505050565b600061010060018060a01b038351168452602080840151818601526040840151604086015260608401516060860160005b6002811015611c1d57825182529183019190830190600101611c00565b5050505060808301518160a0860152611c3882860182611b5f565b91505060a083015184820360c0860152611c528282611b8b565b91505060c083015184820360e0860152611c6c8282611b8b565b95945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611cca57603f19888603018452611cb8858351611bcf565b94509285019290850190600101611c9c565b5092979650505050505050565b600060208284031215611ce957600080fd5b5035919050565b80356001600160a01b0381168114611d0757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d4b57611d4b611d0c565b604052919050565b600082601f830112611d6457600080fd5b813567ffffffffffffffff811115611d7e57611d7e611d0c565b611d91601f8201601f1916602001611d22565b818152846020838601011115611da657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611dd857600080fd5b611de184611cf0565b9250602084013567ffffffffffffffff811115611dfd57600080fd5b611e0986828701611d53565b925050604084013590509250925092565b60008060408385031215611e2d57600080fd5b823567ffffffffffffffff80821115611e4557600080fd5b818501915085601f830112611e5957600080fd5b8135602082821115611e6d57611e6d611d0c565b8160051b611e7c828201611d22565b928352848101820192828101908a851115611e9657600080fd5b958301955b84871015611ebb57611eac87611cf0565b82529583019590830190611e9b565b9750505086013592505080821115611ed257600080fd5b50611edf85828601611d53565b9150509250929050565b60008060608385031215611efc57600080fd5b6040830184811115611f0d57600080fd5b8392503567ffffffffffffffff811115611f2657600080fd5b611edf85828601611d53565b600080600060608486031215611f4757600080fd5b611f5084611cf0565b9250611f5e60208501611cf0565b9150611f6c60408501611cf0565b90509250925092565b60008060408385031215611f8857600080fd5b611f9183611cf0565b946020939093013593505050565b600060208284031215611fb157600080fd5b6116bc82611cf0565b6020815260006116bc6020830184611bcf565b600181811c90821680611fe157607f821691505b60208210810361200157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016120455761204561201d565b5060010190565b6020808252601b908201527f4c6564676572206c6f636b656420666f72206f7065726174696f6e0000000000604082015260600190565b818103818111156116bf576116bf61201d565b6000602082840312156120a857600080fd5b815180151581146120b857600080fd5b9392505050565b6000602082840312156120d157600080fd5b5051919050565b600081546120e581611fcd565b808552602060018381168015612102576001811461211c5761214a565b60ff1985168884015283151560051b88018301955061214a565b866000528260002060005b858110156121425781548a8201860152908301908401612127565b890184019650505b505050505092915050565b6001600160a01b0385811682528416602080830191909152600090604083019085835b600281101561219557815484529282019260019182019101612178565b5050505060a060808301526121ad60a08301846120d8565b9695505050505050565b6001600160a01b03848116825283166020820152606060408201819052600090611c6c908301846120d8565b600082516121f5818460208701611b3b565b9190910192915050565b60008060006060848603121561221457600080fd5b8351925060208401519150604084015190509250925092565b808201808211156116bf576116bf61201d565b601f821115610a5d57600081815260208120601f850160051c810160208610156122675750805b601f850160051c820191505b8181101561228657828155600101612273565b505050505050565b815167ffffffffffffffff8111156122a8576122a8611d0c565b6122bc816122b68454611fcd565b84612240565b602080601f8311600181146122f157600084156122d95750858301515b600019600386901b1c1916600185901b178555612286565b600085815260208120601f198616915b8281101561232057888601518255948401946001909101908401612301565b508582101561233e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c47c96a81d1816b037e4fa3e2212b80c51464e9930815755d937d55ceed6bf4864736f6c63430008140033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "LedgerExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "LedgerNotExists";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[2]";
            readonly name: "inferenceSigner";
            readonly type: "uint256[2]";
        }, {
            readonly internalType: "string";
            readonly name: "additionalInfo";
            readonly type: "string";
        }];
        readonly name: "addLedger";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "deleteLedger";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "depositFund";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "fineTuningAddress";
        readonly outputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAllLedgers";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "availableBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "totalBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "inferenceSigner";
                readonly type: "uint256[2]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }, {
                readonly internalType: "address[]";
                readonly name: "inferenceProviders";
                readonly type: "address[]";
            }, {
                readonly internalType: "address[]";
                readonly name: "fineTuningProviders";
                readonly type: "address[]";
            }];
            readonly internalType: "struct Ledger[]";
            readonly name: "ledgers";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "getLedger";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "availableBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "totalBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "inferenceSigner";
                readonly type: "uint256[2]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }, {
                readonly internalType: "address[]";
                readonly name: "inferenceProviders";
                readonly type: "address[]";
            }, {
                readonly internalType: "address[]";
                readonly name: "fineTuningProviders";
                readonly type: "address[]";
            }];
            readonly internalType: "struct Ledger";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "inferenceAddress";
        readonly outputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_inferenceAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_fineTuningAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "refund";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "providers";
            readonly type: "address[]";
        }, {
            readonly internalType: "string";
            readonly name: "serviceType";
            readonly type: "string";
        }];
        readonly name: "retrieveFund";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "spendFund";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly internalType: "string";
            readonly name: "serviceTypeStr";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "transferFund";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): LedgerManagerInterface;
    static connect(address: string, runner?: ContractRunner | null): LedgerManager;
}
export {};
//# sourceMappingURL=LedgerManager__factory.d.ts.map